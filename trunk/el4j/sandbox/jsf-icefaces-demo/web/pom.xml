<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

     <parent>
        <groupId>ch.elca.el4j.applications</groupId>
        <artifactId>jsf-icefaces-demo</artifactId>
        <version>0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    
    <artifactId>jsf-icefaces-demo-webapp</artifactId>
	<version>0.1</version>
    <packaging>war</packaging>
    <name>JSF and ICEfaces demo - Web (JSF)</name>
    
	
	 
	
    <build>
        <plugins>
			 <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <configuration>
                    <deployer>
                        <deployables>
                            <deployable>
                                <location>${jee-web.war.location}</location>
                                <properties>
                                    <context>${jee-web.context}</context>
                                </properties>
                            </deployable>
                        </deployables>
                    </deployer>
                </configuration>
            </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.0</version>
            <configuration>
              <archive>
                <manifest>
                  <addClasspath>true</addClasspath>
                </manifest>
              </archive>
            </configuration>
          </plugin>
          
			
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.5</version>
                <configuration>
                    <contextPath>/</contextPath>
                    <scanIntervalSeconds>3</scanIntervalSeconds>
                    <scanTargetPatterns>
                        <scanTargetPattern>
                            <directory>src/main/webapp/WEB-INF</directory>
                            <excludes>
                                <exclude>**/*.jsp</exclude>
                                <exclude>**/*.xhtml</exclude>
                            </excludes>
                            <includes>
                                <include>**/*.properties</include>
                                <include>**/*.xml</include>
                            </includes>
                        </scanTargetPattern>
                    </scanTargetPatterns>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <dependentWarExcludes>
                        **/jdbc.properties,**/hibernate.cfg.xml,**/sql-map-config.xml,**/web.xml,WEB-INF/classes/META-INF/**
                    </dependentWarExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native2ascii-maven-plugin</artifactId>
                <version>1.0-alpha-1</version>
                <configuration>
                    <dest>target/classes</dest>
                    <src>src/main/resources</src>
                </configuration>
                <executions>
                    <execution>
                        <id>native2ascii-utf8</id>
                        <goals>
                            <goal>native2ascii</goal>
                        </goals>
                        <configuration>
                            <encoding>UTF8</encoding>
                            <includes>
                                ApplicationResources_ko.properties,
                                ApplicationResources_no.properties,
                                ApplicationResources_tr.properties,
                                ApplicationResources_zh*.properties
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>native2ascii-8859_1</id>
                        <goals>
                            <goal>native2ascii</goal>
                        </goals>
                        <configuration>
                            <encoding>8859_1</encoding>
                            <includes>
                                ApplicationResources_de.properties,
                                ApplicationResources_fr.properties,
                                ApplicationResources_nl.properties,
                                ApplicationResources_pt*.properties
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
		
	
		
		<pluginManagement>
            <plugins>
                <plugin>
                    <groupId>ch.elca.el4j.maven.plugins</groupId>
                    <artifactId>maven-database-plugin</artifactId>
                    <configuration>
                        <dbName>db2</dbName>
                        <connectionPropertiesSource>
                            scenarios/db/raw/refdb-web-override-{db.name}.properties
                        </connectionPropertiesSource>
                        <sqlSourceDir>
                            /etc/*/general/, /etc/*/db2/
                        </sqlSourceDir>
                        <wait>false</wait>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
		
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>ApplicationResources_de.properties</exclude>
                    <exclude>ApplicationResources_fr.properties</exclude>
                    <exclude>ApplicationResources_ko.properties</exclude>
                    <exclude>ApplicationResources_nl.properties</exclude>
                    <exclude>ApplicationResources_no.properties</exclude>
                    <exclude>ApplicationResources_pt*.properties</exclude>
                    <exclude>ApplicationResources_tr.properties</exclude>
                    <exclude>ApplicationResources_zh*.properties</exclude>
                    <exclude>applicationContext-resources.xml</exclude>
                </excludes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>applicationContext-resources.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/main/webapp</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </testResource>
        </testResources>
    </build>

    <!-- Dependencies calculated by AppFuse when running full-source plugin -->
	
    <dependencies>

        <dependency>
            <groupId>${pom.parent.groupId}</groupId>
            <artifactId>${pom.parent.artifactId}-core</artifactId>
            <version>${pom.parent.version}</version>
        </dependency>
        <dependency>
            <groupId>com.corejsf</groupId>
            <artifactId>corejsf-validator</artifactId>
            <version>${corejsf.validator.version}</version>
        </dependency>
		
       
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet.version}</version>
           <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${jsp.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${jsp.version}</version>
            <scope>provided</scope>
        </dependency>
		
        <!--dependency>
            <groupId>net.java.dev.ajax4jsf</groupId>
            <artifactId>ajax4jsf</artifactId>
            <version>${ajax4jsf.version}</version>
        </dependency-->
		
        <dependency>
            <groupId>net.sf.jsfcomp</groupId>
            <artifactId>acegijsf</artifactId>
            <version>${acegijsf.version}</version>
        </dependency>
		
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>clickstream</artifactId>
            <version>${clickstream.version}</version>
        </dependency>
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>oscache</artifactId>
            <version>${oscache.version}</version>
        </dependency>
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>sitemesh</artifactId>
            <version>${sitemesh.version}</version>
        </dependency>
	
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-api</artifactId>
            <version>${myfaces.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-impl</artifactId>
            <version>${myfaces.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.tomahawk</groupId>
            <artifactId>tomahawk</artifactId>
            <version>${myfaces.tomahawk.version}</version>
			<exclusions>
				<!-- linked seperatly -->
			<exclusion>
					<groupId>commons-fileupload</groupId>
					<artifactId>commons-fileupload</artifactId>
				</exclusion>
				<!-- should be excluded if seperate el-api is used (see below)-->
				<!--<exclusion>
					<groupId>commons-el</groupId>
					<artifactId>commons-el</artifactId>
				</exclusion>-->
			</exclusions>
        </dependency>
		
		
        <dependency>
            <groupId>org.apache.shale</groupId>
            <artifactId>shale-test</artifactId>
            <version>${shale.version}</version>
            <optional>true</optional>
        </dependency>
        
        <dependency>
            <groupId>org.tuckey</groupId>
            <artifactId>urlrewritefilter</artifactId>
            <version>${urlrewrite.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>ant</artifactId>
                    <groupId>ant</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>struts-menu</groupId>
            <artifactId>struts-menu</artifactId>
            <version>${struts.menu.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>xml-apis</artifactId>
                    <groupId>xml-apis</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>${jstl.version}</version>
        </dependency>
		
	
	
	<dependency>
	  <groupId>org.icefaces</groupId>
	  <artifactId>icefaces</artifactId>
	  <version>1.7.0-DR2</version>
	</dependency>
	<dependency>
	  <groupId>org.icefaces</groupId>
	  <artifactId>icefaces-comps</artifactId>
	  <version>1.7.0-DR2</version><!-- 1.7.0-DR2-->
	</dependency>
	<dependency>
	  <groupId>org.icefaces</groupId>
	  <artifactId>icefaces-facelets</artifactId>
	  <version>1.7.0-DR2</version>
	</dependency>

	<!--sitemesh in combination with icefaces will not work any more, when this el-api is used-->
	<!--dependency>
		<groupId>javax.el</groupId>
		<artifactId>el-api</artifactId>
		<version>1.0</version>
	</dependency-->
	

	<!-- and el-ri.jar-->
	<!-- needed for Tomcat -->
	<!--
	<dependency>
		<groupId>com.sun.el</groupId>
		<artifactId>el-ri</artifactId>
		<version>1.0</version>
	</dependency>-->


	<!-- some other dependencies needed or believed to be needed for icefaces (other versions of some artifacts are already included because of other dependencies)-->
	<dependency>
		<groupId>backport-util-concurrent</groupId>
		<artifactId>backport-util-concurrent</artifactId>
		<version>2.2</version>
	</dependency>
	<!--
	<dependency>
		<groupId>commons-collections</groupId>
		<artifactId>commons-collections</artifactId>
		<version>3.2</version>
	</dependency>
	
	<dependency>
		<groupId>commons-digester</groupId>
		<artifactId>commons-digester</artifactId>
		<version>1.8</version>
	</dependency>
	
	<dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging-api</artifactId>
		<version>1.1</version>
	</dependency>
	
	<dependency>
		<groupId>xerces</groupId>
		<artifactId>xercesImpl</artifactId>
		<version>2.7.1</version>
	</dependency>
	
	<dependency>
		<groupId>xml-apis</groupId>
		<artifactId>xml-apis</artifactId>
		<version>1.3.02</version>
	</dependency>-->
	
	<!-- use Sun JSF 1.1 implementation instead of myfaces -->
	<!--<dependency>
		<groupId>javax.faces</groupId>
		<artifactId>jsf-api</artifactId>
		<version>1.2</version>
	</dependency>
	
	<dependency>
		<groupId>javax.faces</groupId>
		<artifactId>jsf-impl</artifactId>
		<version>1.2</version>
	</dependency>-->
	
	<!-- dependencies for keyword/refdb -->
	<!--  EL4J framework modules -->
	
	<!--
    <dependency>
        <groupId>ch.elca.el4j.applications</groupId>
        <artifactId>keyword-service</artifactId>
		<version>2.4-SNAPSHOT</version>
    </dependency>-->
	
	<!--
	<dependency>
		<groupId>ch.elca.el4j.internal.apps</groupId>
		<artifactId>keyword-web-jar</artifactId>
		<version>2.4-SNAPSHOT</version>
	</dependency>
	
	<dependency>
            <groupId>ch.elca.el4j.internal.apps</groupId>
            <artifactId>keyword-web-war</artifactId>
            <type>war</type>
    </dependency>
	
	<dependency>
        <groupId>ch.elca.el4j.modules</groupId>
        <artifactId>module-web-jar</artifactId>
		<version>1.7-SNAPSHOT</version>
    </dependency>-->
		
		
	<!--
	<dependency>
            <groupId>ch.elca.el4j.internal.apps</groupId>
            <artifactId>refdb-web-jar</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.elca.el4j.internal.apps</groupId>
            <artifactId>keyword-web-war</artifactId>
            <type>war</type>
        </dependency>
	-->
	
	<!--
    <dependency>
        <groupId>ch.elca.el4j.internal.apps</groupId>
        <artifactId>refdb-web-jar</artifactId>
    </dependency>
    <dependency>
        <groupId>ch.elca.el4j.internal.apps</groupId>
        <artifactId>keyword-web-war</artifactId>
        <type>war</type>
    </dependency>-->
	<!--
	<dependency>
        <groupId>ch.elca.el4j.internal.apps</groupId>
        <artifactId>refdb-web-jar</artifactId>
    </dependency>
	
   -->
   
  

</dependencies>

    <!--<profiles>-->
	<!--
        <profile>
            <id>integration-test</id>
            <activation>
                <property>
                    <name>!maven.test.skip</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>0.3</version>
                        <configuration>
                            <wait>${cargo.wait}</wait>
                            <container>
                                <containerId>${cargo.container}</containerId>-->
                                <!--home>${cargo.container.home}</home-->
								<!--
                                <zipUrlInstaller>
                                    <url>${cargo.container.url}</url>
                                    <installDir>${installDir}</installDir>
                                </zipUrlInstaller>
                            </container>
                            <configuration>
                                <home>${project.build.directory}/${cargo.container}/container</home>
                                <properties>
                                    <cargo.hostname>${cargo.host}</cargo.hostname>
                                    <cargo.servlet.port>${cargo.port}</cargo.servlet.port>
                                </properties>
                            </configuration>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-container</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-container</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.1</version>
                        <configuration>
                            <tasks>
                                <taskdef resource="webtest_base_relaxed.taskdef">
                                    <classpath refid="maven.test.classpath"/>
                                </taskdef>
                                <mkdir dir="target/webtest-data"/>-->
                                <!-- Delete old results file if it exists -->
                               <!-- <delete file="target/webtest-data/web-tests-result.xml"/>-->
                                <!-- This is so the default will be used if no test case is specified -->
                             <!--   <property name="test" value="run-all-tests"/>
                                <echo level="info">Testing '${project.build.finalName}' with locale '${user.language}'</echo>
                                <ant antfile="src/test/resources/web-tests.xml" target="${test}">
                                    <property name="user.language" value="${user.language}"/>
                                    <property name="webapp.name" value="${project.build.finalName}"/>
                                    <property name="host" value="${cargo.host}"/>
                                    <property name="port" value="${cargo.port}"/>
                                </ant>
                            </tasks>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.canoo.webtest</groupId>
                                <artifactId>webtest</artifactId>
                                <version>${webtest.version}</version>-->
                                <!-- groovy-all doesn't have a pom in central repo -->
                                <!-- exclude groovy to prevent trying to fetch pom -->
                               <!-- <exclusions>
                                    <exclusion>
                                        <groupId>groovy</groupId>
                                        <artifactId>groovy-all</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>-->
	
	<!--<profiles>-->
		<!-- DB profiles-->
		<!-- dialects for hibernate must be provided here as they are not properly read elsewhere (unsolved integration problem)-->
       <!-- <profile>
            <id>db2</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
				<databaseDialect>ch.elca.el4j.services.persistence.hibernate.dialect.PatchedDerbyDialect</databaseDialect>
            </properties>
        </profile>
        <profile>
            <id>oracle</id>
            <properties>
				<databaseDialect>org.hibernate.dialect.Oracle9Dialect</databaseDialect>
            </properties>
        </profile>-->
		<!-- MySQL is currently not supported -->
       <!-- <profile>	
		            <id>mysql</id>
		            <properties>
		                <databaseDialect>org.hibernate.dialect.MySQLMyISAMDialect</databaseDialect>
		            </properties>
		        </profile>
		
		
		
   </profiles>-->
	
	
	
	<properties>
	
		<jee-web.context>jsf-web</jee-web.context>
		<db.connectionPropertiesSource>scenarios/db/raw/refdb-web-override-${db.name}.properties</db.connectionPropertiesSource>
		<!--<dbName>mysql</dbName>-->
       <databaseDialect>ch.elca.el4j.services.persistence.hibernate.dialect.PatchedDerbyDialect</databaseDialect>
	   
		
	
	</properties>
</project>
