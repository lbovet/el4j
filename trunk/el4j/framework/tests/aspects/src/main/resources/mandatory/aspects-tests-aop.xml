<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<bean name="serviceLoggerInterceptor" class="ch.elca.el4j.tests.aspects.interceptor.ServiceLoggerInterceptor">
		<property name="useDynamicLogger" value="false" />
	</bean>

	<aop:config proxy-target-class="false">
		<aop:aspect id="serviceLoggerInterceptorExecution"
			ref="serviceLoggerInterceptor"
			order="101">
			<aop:pointcut id="serviceLoggerCall" expression="execution(@ch.elca.el4j.tests.aspects.interceptor.Logged public * ch.elca.el4j..*(..)) " />
			<aop:around pointcut-ref="serviceLoggerCall" method="test" />
		</aop:aspect>
	</aop:config>
</beans>
