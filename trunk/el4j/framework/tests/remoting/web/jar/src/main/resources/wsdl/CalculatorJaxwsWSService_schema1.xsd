<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xs:schema version="1.0" targetNamespace="http://gen.service.remoting.tests.el4j.elca.ch/" xmlns:tns="http://gen.service.remoting.tests.el4j.elca.ch/" xmlns:ns1="another.test.another.path" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:import namespace="another.test.another.path" schemaLocation="CalculatorJaxwsWSService_schema2.xsd"/>

  <xs:element name="CalculatorException" type="tns:CalculatorException"/>

  <xs:element name="SpecialCalculatorException" type="tns:SpecialCalculatorException"/>

  <xs:element name="countNumberOfUppercaseLetters" type="tns:countNumberOfUppercaseLetters"/>

  <xs:element name="countNumberOfUppercaseLettersResponse" type="tns:countNumberOfUppercaseLettersResponse"/>

  <xs:element name="echoValueObjectJaxws" type="tns:echoValueObjectJaxws"/>

  <xs:element name="echoValueObjectJaxwsResponse" type="tns:echoValueObjectJaxwsResponse"/>

  <xs:element name="getArea" type="tns:getArea"/>

  <xs:element name="getAreaResponse" type="tns:getAreaResponse"/>

  <xs:element name="throwMeASpecialException" type="tns:throwMeASpecialException"/>

  <xs:element name="throwMeASpecialExceptionResponse" type="tns:throwMeASpecialExceptionResponse"/>

  <xs:element name="throwMeAnException" type="tns:throwMeAnException"/>

  <xs:element name="throwMeAnExceptionResponse" type="tns:throwMeAnExceptionResponse"/>

  <xs:complexType name="throwMeASpecialException">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="throwMeASpecialExceptionResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="SpecialCalculatorException">
    <xs:sequence>
      <xs:element name="formatParameters" type="xs:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="formatString" type="xs:string" minOccurs="0"/>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="echoValueObjectJaxws">
    <xs:sequence>
      <xs:element name="arg0" type="ns1:calculatorValueObjectJaxws" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="echoValueObjectJaxwsResponse">
    <xs:sequence>
      <xs:element name="return" type="ns1:calculatorValueObjectJaxws" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getArea">
    <xs:sequence>
      <xs:element name="arg0" type="xs:double"/>
      <xs:element name="arg1" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="getAreaResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="throwMeAnException">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="throwMeAnExceptionResponse">
    <xs:sequence/>
  </xs:complexType>

  <xs:complexType name="CalculatorException">
    <xs:sequence>
      <xs:element name="formatParameters" type="xs:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="formatString" type="xs:string" minOccurs="0"/>
      <xs:element name="message" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="countNumberOfUppercaseLetters">
    <xs:sequence>
      <xs:element name="arg0" type="xs:string" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="countNumberOfUppercaseLettersResponse">
    <xs:sequence>
      <xs:element name="return" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>

