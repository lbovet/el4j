<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <!-- $Revision$ -->
    <!-- $URL$ -->
    <!-- $Date$ -->
    <!-- $Author$ -->
    
    <import resource="classpath:org/codehaus/xfire/spring/xfire.xml" />

    <!-- Abstract XFireProtocol -->
    <bean id="abstractXFireProtocol" abstract="true"
        class="ch.elca.el4j.services.remoting.protocol.XFire">
        <property name="serviceHost">
            <value>${jee-web.host}</value>
        </property>
        <property name="servicePort">
            <value>${jee-web.port}</value>
        </property>
        <property name="contextPath">
            <value>module-remoting-tests-web</value>
        </property>
        <property name="implicitContextPassingRegistry">
            <ref local="xfireImplicitContextPassingRegistry" />
        </property>
        <property name="xfire">
            <ref bean="xfire" />
        </property>
        <property name="serviceFactory">
            <ref bean="xfire.serviceFactory" />
        </property>
        <property name="serviceProperties">
            <map>
                <entry key="xfire.stax.input.factory">
                    <value type="java.lang.String">com.ctc.wstx.stax.WstxInputFactory</value>
                </entry>
                <entry key="xfire.stax.output.factory">
                    <value type="java.lang.String">com.ctc.wstx.stax.WstxOutputFactory</value>
                </entry>
            </map>
        </property>
    </bean>

    <!-- Default XFire Setup -->
    <bean id="xFireProtocol" parent="abstractXFireProtocol" />


    <bean id="xfireImplicitContextPassingRegistry"
        class="ch.elca.el4j.tests.remoting.service.TestImplicitContextPassingRegistry" />



    <!-- XFire Jaxb without annotations -->
    <bean id="xFireProtocolJaxb" parent="abstractXFireProtocol"
        class="ch.elca.el4j.services.remoting.protocol.XFireSoapHeaderContextPassing">
        <property name="implicitContextPassingRegistry">
            <ref local="xfireImplicitContextPassingRegistryJaxb" />
        </property>
        <property name="serviceFactory">
            <ref bean="xfireJaxbServiceFactoryWithoutAnnotations" />
        </property>
        <property name="protocolSpecificContextPassing">
            <value>true</value>
        </property>
        <property name="contextPassingContext">
            <ref bean="xfireContextPassingContext" />
        </property>
    </bean>

    <bean id="xfireImplicitContextPassingRegistryJaxb"
        class="ch.elca.el4j.tests.remoting.service.TestImplicitXFireContextPassingRegistry" />



    <bean id="xfireJaxbContextPath" class="javax.xml.bind.JAXBContext"
        factory-method="newInstance">
        <constructor-arg index="0">
            <list>
                <value>
                    ch.elca.el4j.tests.remoting.service.CalculatorValueObject
                </value>
            </list>
        </constructor-arg>
    </bean>

    <!-- JAXBContext used by the XFireJaxb protocol to marshall the implicit context -->
    <bean id="xfireContextPassingContext"
        class="javax.xml.bind.JAXBContext"
        factory-method="newInstance">
        <constructor-arg index="0">
            <list>
                <value>
                    ch.elca.el4j.tests.remoting.service.TestXFireContextPassingValue
                </value>
            </list>
        </constructor-arg>
    </bean>

    <!-- XFire Jaxb annotated -->
    <bean id="xFireProtocolJaxbAnnotated" parent="abstractXFireProtocol"
        class="ch.elca.el4j.services.remoting.protocol.XFireSoapHeaderContextPassing">
        <property name="implicitContextPassingRegistry">
            <ref local="xfireImplicitContextPassingRegistryJaxb" />
        </property>
        <property name="serviceFactory">
            <ref bean="xfireJaxbServiceFactory" />
        </property>
        <property name="protocolSpecificContextPassing">
            <value>true</value>
        </property>
        <property name="contextPassingContext">
            <ref bean="xfireContextPassingContext" />
        </property>
    </bean>


    <!-- Service Factories -->

    <bean id="xfireJaxbServiceFactory"
        class="org.codehaus.xfire.jaxb2.JaxbServiceFactory">
        <constructor-arg index="0">
            <ref bean="xfire.transportManager" />
        </constructor-arg>
        <constructor-arg index="1">
            <ref bean="xfireJaxbContextPath" />
        </constructor-arg>
    </bean>

    <bean id="xfireJaxbServiceFactoryWithoutAnnotations"
        class="ch.elca.el4j.services.remoting.protocol.xfire.JaxbServiceFactoryWithoutWebAnnotations">
        <constructor-arg index="0">
            <ref bean="xfire.transportManager" />
        </constructor-arg>
        <constructor-arg index="1">
            <ref bean="xfireJaxbContextPath" />
        </constructor-arg>
    </bean>

</beans>
