<?xml version="1.0" encoding="UTF-8"?>
<schema targetNamespace="http://cookxml.sf.net/cookswing/" xmlns="http://www.w3.org/2001/XMLSchema"
	xmlns:cookSwing="http://cookxml.sf.net/cookswing/" xmlns:cookXmlCommon="http://cookxml.sf.net/common/"
	version ="1.4">

	<import namespace="http://cookxml.sf.net/common/"
		schemaLocation="http://el4.elca-services.ch/el4j/schema/swing/cookXmlCommon.xsd" />

	<complexType name="listeners">
		<complexContent>
			<extension base="cookXmlCommon:object">
				<attribute name="actionlistener" type="string" />
				<attribute name="adjustmentlistener" type="string" />
				<attribute name="ancestorlistener" type="string" />
				<attribute name="awteventlistener" type="string" />
				<attribute name="caretlistener" type="string" />
				<attribute name="celleditorlistener" type="string" />
				<attribute name="changelistener" type="string" />
				<attribute name="componentlistener" type="string" />
				<attribute name="containerlistener" type="string" />
				<attribute name="documentlistener" type="string" />
				<attribute name="exceptionlistener" type="string" />
				<attribute name="focuslistener" type="string" />
				<attribute name="hierarchyboundslistener" type="string" />
				<attribute name="hierarchylistener" type="string" />
				<attribute name="hyperlinklistener" type="string" />
				<attribute name="inputmethodlistener" type="string" />
				<attribute name="internalframelistener" type="string" />
				<attribute name="itemlistener" type="string" />
				<attribute name="keylistener" type="string" />
				<attribute name="listdatalistener" type="string" />
				<attribute name="listselectionlistener" type="string" />
				<attribute name="menudragmouselistener" type="string" />
				<attribute name="menukeylistener" type="string" />
				<attribute name="menulistener" type="string" />
				<attribute name="mouseinputlistener" type="string" />
				<attribute name="mouselistener" type="string" />
				<attribute name="mousemotionlistener" type="string" />
				<attribute name="mousewheellistener" type="string" />
				<attribute name="popupmenulistener" type="string" />
				<attribute name="propertychangelistener" type="string" />
				<attribute name="tablecolumnmodellistener" type="string" />
				<attribute name="tablemodellistener" type="string" />
				<attribute name="textlistener" type="string" />
				<attribute name="treeexpansionlistener" type="string" />
				<attribute name="treemodellistener" type="string" />
				<attribute name="treeselectionlistener" type="string" />
				<attribute name="treewillexpandlistener" type="string" />
				<attribute name="undoableeditlistener" type="string" />
				<attribute name="vetoablechangelistener" type="string" />
				<attribute name="windowfocuslistener" type="string" />
				<attribute name="windowlistener" type="string" />
				<attribute name="windowstatelistener" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="window-constants">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="defaultcloseoperation" type="string" />
				<attribute name="locationrelativeto" type="string" />
				<attribute name="packed" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<!-- containers -->
	<complexType name="applet">
		<complexContent>
			<extension base="cookSwing:window-constants" />
		</complexContent>
	</complexType>

	<complexType name="component" mixed="true">
		<complexContent>
			<extension base="cookSwing:listeners">
				<!--
					<sequence minOccurs="0" maxOccurs="unbounded"> <choice> <element
					ref="cookSwing:border" /> <element ref="cookSwing:layout" /> <!- -
					TODO more - -> </choice> </sequence>
				-->
				<attribute name="alignmentx" type="float" />
				<attribute name="alignmenty" type="float" />
				<attribute name="autoscrolls" type="boolean" />
				<attribute name="background" type="cookSwing:color" />
				<attribute name="bounds" type="cookSwing:rectangle" />
				<attribute name="cursor" type="cookSwing:cursor" />
				<attribute name="debuggraphicsoptions" type="cookSwing:debugoption" />
				<attribute name="defaultlocale" type="cookSwing:locale" />
				<attribute name="doublebuffered" type="boolean" />
				<attribute name="enabled" type="boolean" />
				<attribute name="focusable" type="boolean" />
				<attribute name="focuscycleroot" type="boolean" />
				<attribute name="focustraversalkeysenabled" type="boolean" />
				<attribute name="font" type="cookSwing:font" />
				<attribute name="foreground" type="cookSwing:color" />
				<attribute name="ignorerepaint" type="boolean" />
				<attribute name="locale" type="cookSwing:locale" />
				<attribute name="location" type="cookSwing:point" />
				<attribute name="maximumsize" type="cookSwing:dimension" />
				<attribute name="minimumsize" type="cookSwing:dimension" />
				<attribute name="name" type="string" />
				<attribute name="opaque" type="boolean" />
				<attribute name="preferredsize" type="cookSwing:dimension" />
				<attribute name="requestfocusenabled" type="boolean" />
				<attribute name="size" type="cookSwing:dimension" />
				<attribute name="tooltiptext" type="string" />
				<attribute name="verifyinputwhenfocustarget" type="boolean" />
				<attribute name="visible" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="desktoppane">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="dragmode" type="cookSwing:dragmode" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="dialog">
		<complexContent>
			<extension base="cookSwing:window-constants">
				<attribute name="decorated" type="string" />
				<attribute name="modal" type="boolean" />
				<attribute name="resizable" type="boolean" />
				<attribute name="title" type="string" />
				<attribute name="undecorated" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="frame">
		<complexContent>
			<extension base="cookSwing:window-constants">
				<attribute name="decorated" type="string" />
				<attribute name="defaultlookandfeeldecorated" type="boolean" />
				<attribute name="extendedstate" type="cookSwing:framestate" />
				<attribute name="iconimage" type="string" />
				<attribute name="maximizedbounds" type="cookSwing:rectangle" />
				<attribute name="resizable" type="boolean" />
				<attribute name="state" type="int">

					<annotation>
						<documentation>Obsolete! User extendedstate instead!
						</documentation>
					</annotation>
				</attribute>
				<attribute name="title" type="string" />
				<attribute name="undecorated" type="boolean" />
				<!-- TODO check if all -->
			</extension>
		</complexContent>
	</complexType>

	<complexType name="internalframe">
		<complexContent>
			<extension base="cookSwing:window-constants">
				<attribute name="closable" type="boolean" />
				<attribute name="desktopicon" type="string" />
				<attribute name="frameicon" type="string" />
				<attribute name="icon" type="boolean" />
				<attribute name="iconifiable" type="boolean" />
				<attribute name="layer" type="int" />
				<attribute name="maximizable" type="boolean" />
				<attribute name="maximum" type="boolean" />
				<attribute name="normalbounds" type="cookSwing:rectangle" />
				<attribute name="resizable" type="boolean" />
				<attribute name="selected" type="boolean" />
				<attribute name="title" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="panel">
		<complexContent>
			<extension base="cookSwing:component" />
		</complexContent>
	</complexType>

	<complexType name="scrollpane">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="horizontalscrollbarpolicy" type="cookSwing:horizontalscrollbarpolicy" />
				<attribute name="verticalscrollbarpolicy" type="cookSwing:verticalscrollbarpolicy" />
				<attribute name="viewportborder" type="string" />
				<attribute name="wheelscrollingenabled" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="tabbedpane">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="selectedindex" type="int" />
				<attribute name="tablayoutpolicy" type="cookSwing:tablayoutpolicy" />
				<attribute name="tabplacement" type="cookSwing:tabplacement" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="rootpane">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="windowdecorationstyle" type="cookSwing:windowdecorationstyle" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="window">
		<complexContent>
			<extension base="cookSwing:window-constants" />
		</complexContent>
	</complexType>

	<element name="listeners" type="cookSwing:listeners"
		substitutionGroup="cookXmlCommon:object" />
	<element name="component" type="cookSwing:component"
		substitutionGroup="cookSwing:listeners" />
	<element name="window-constants" type="cookSwing:window-constants"
		substitutionGroup="cookSwing:listeners" />

	<element name="applet" type="cookSwing:applet"
		substitutionGroup="cookSwing:window-constants" />
	<element name="desktoppane" type="cookSwing:desktoppane"
		substitutionGroup="cookSwing:component" />
	<element name="dialog" type="cookSwing:dialog"
		substitutionGroup="cookSwing:window-constants" />
	<element name="frame" type="cookSwing:frame" substitutionGroup="cookSwing:window-constants" />
	<element name="internalframe" type="cookSwing:internalframe"
		substitutionGroup="cookSwing:window-constants" />
	<element name="panel" type="cookSwing:panel" substitutionGroup="cookSwing:component" />
	<element name="rootpane" type="cookSwing:rootpane"
		substitutionGroup="cookSwing:component" />
	<element name="scrollpane" type="cookSwing:scrollpane"
		substitutionGroup="cookSwing:component" />
	<element name="tabbedpane" type="cookSwing:tabbedpane"
		substitutionGroup="cookSwing:component" />
	<element name="window" type="cookSwing:window"
		substitutionGroup="cookSwing:window-constants" />


	<!-- abstract types -->
	<complexType name="abstractbutton" abstract="true">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="action" type="string" />
				<attribute name="actioncommand" type="string" />
				<attribute name="contentareafilled" type="boolean" />
				<attribute name="disabledicon" type="string" />
				<attribute name="disabledselectedicon" type="string" />
				<attribute name="displayedmnemonicindex" type="int" />
				<attribute name="focuspainted" type="boolean" />
				<attribute name="horizontalalignment" type="string" />
				<attribute name="horizontaltextposition" type="string" />
				<attribute name="icon" type="string" />
				<attribute name="icontextgap" type="int" />
				<attribute name="label" type="string" />
				<attribute name="margin" type="string" />
				<attribute name="mnemonic" type="string" />
				<attribute name="multiclickthreshhold" type="int" />
				<attribute name="pressedicon" type="string" />
				<attribute name="rolloverenabled" type="boolean" />
				<attribute name="rollovericon" type="string" />
				<attribute name="rolloverselectedicon" type="string" />
				<attribute name="selectedicon" type="string" />
				<attribute name="text" type="string" />
				<attribute name="verticalalignment" type="string" />
				<attribute name="verticaltextposition" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<element name="abstractbutton" type="cookSwing:abstractbutton"
		abstract="true" substitutionGroup="cookSwing:component" />


	<!-- menu related -->
	<complexType name="menubar">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="borderpainted" type="boolean" />
				<attribute name="helpmenu" type="string" />
				<attribute name="margin" type="cookSwing:insets" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="menu">
		<complexContent>
			<extension base="cookSwing:abstractbutton">
				<attribute name="accelerator" type="string" />
				<attribute name="armed" type="boolean" />
				<attribute name="componentorientation" type="string" />
				<attribute name="delay" type="int" />
				<attribute name="popupmenuvisible" type="boolean" />
				<attribute name="selected" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="menuitem">
		<complexContent>
			<extension base="cookSwing:abstractbutton">
				<attribute name="accelerator" type="string" />
				<attribute name="armed" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="checkboxmenuitem">
		<complexContent>
			<extension base="cookSwing:abstractbutton">
				<attribute name="state" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="radiobuttonmenuitem">
		<complexContent>
			<extension base="cookSwing:abstractbutton" />
		</complexContent>
	</complexType>

	<complexType name="menusplit">
		<complexContent>
			<extension base="cookSwing:component" />
		</complexContent>
	</complexType>

	<complexType name="popupmenu">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="borderpainted" type="boolean" />
				<attribute name="defaultlightweightpopupenabled" type="boolean" />
				<attribute name="label" type="string" />
				<attribute name="lightweightpopupenabled" type="boolean" />
				<attribute name="popupsize" type="cookSwing:dimension" />
				<attribute name="selected" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<element name="menubar" type="cookSwing:menubar"
		substitutionGroup="cookSwing:component" />
	<element name="menu" type="cookSwing:menu" substitutionGroup="cookSwing:abstractbutton" />
	<element name="menuitem" type="cookSwing:menuitem"
		substitutionGroup="cookSwing:abstractbutton" />
	<element name="checkboxmenuitem" type="cookSwing:checkboxmenuitem"
		substitutionGroup="cookSwing:abstractbutton" />
	<element name="radiobuttonmenuitem" type="cookSwing:radiobuttonmenuitem"
		substitutionGroup="cookSwing:abstractbutton" />
	<element name="menusplit" type="cookSwing:menusplit"
		substitutionGroup="cookSwing:component" />
	<element name="popupmenu" type="cookSwing:popupmenu"
		substitutionGroup="cookSwing:component" />

	<!-- toolbar related -->
	<complexType name="toolbar">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="borderpainted" type="boolean" />
				<attribute name="floatable" type="boolean" />
				<attribute name="margin" type="cookSwing:insets" />
				<attribute name="orientation" type="string" />
				<attribute name="rollover" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="toolbar-separator">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="separatorsize" type="cookSwing:dimension" />
			</extension>
		</complexContent>
	</complexType>

	<element name="toolbar" type="cookSwing:toolbar"
		substitutionGroup="cookSwing:component" />
	<element name="toolbar-separator" type="cookSwing:toolbar-separator"
		substitutionGroup="cookSwing:component" />



	<!-- text components -->
	<complexType name="textcomponent">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="caretcolor" type="string" />
				<attribute name="caretposition" type="int" />
				<attribute name="componentorientation" type="string" />
				<attribute name="disabledtextcolor" type="string" />
				<attribute name="dragenabled" type="boolean" />
				<attribute name="editable" type="string" />
				<attribute name="focusaccelerator" type="string" />
				<attribute name="margin" type="string" />
				<attribute name="selectedtextcolor" type="string" />
				<attribute name="selectioncolor" type="string" />
				<attribute name="selectionend" type="int" />
				<attribute name="selectionstart" type="int" />
				<attribute name="text" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="textfield">
		<complexContent>
			<extension base="cookSwing:textcomponent">
				<attribute name="columns" type="int" />
				<attribute name="horizontalalignment" type="cookSwing:horizontalalignment" />
				<attribute name="scrolloffset" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="formattedtextfield" mixed="true">
		<complexContent>
			<extension base="cookSwing:textfield">
				<!--
					<sequence minOccurs="0" maxOccurs="1"> <element
					ref="cookSwing:formatter" /> </sequence>
				-->
				<attribute name="focuslostbehavior" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="passwordfield">
		<complexContent>
			<extension base="cookSwing:textfield">
				<attribute name="echochar" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="textarea">
		<complexContent>
			<extension base="cookSwing:textcomponent">
				<attribute name="columns" type="int" />
				<attribute name="linewrap" type="boolean" />
				<attribute name="rows" type="int" />
				<attribute name="tabsize" type="int" />
				<attribute name="wrapstyleword" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="editorpane">
		<complexContent>
			<extension base="cookSwing:textcomponent">
				<attribute name="contenttype" type="string" />
				<attribute name="page" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="textpane">
		<complexContent>
			<extension base="cookSwing:textcomponent">
				<attribute name="contenttype" type="string" />
				<attribute name="page" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<element name="textcomponent" type="cookSwing:textcomponent"
		substitutionGroup="cookSwing:component" />
	<element name="textfield" type="cookSwing:textfield"
		substitutionGroup="cookSwing:textcomponent" />
	<element name="formattedtextfield" type="cookSwing:formattedtextfield"
		substitutionGroup="cookSwing:textfield" />
	<element name="passwordfield" type="cookSwing:passwordfield"
		substitutionGroup="cookSwing:textfield" />
	<element name="textarea" type="cookSwing:textarea"
		substitutionGroup="cookSwing:textcomponent" />
	<element name="editorpane" type="cookSwing:editorpane"
		substitutionGroup="cookSwing:component" />
	<element name="textpane" type="cookSwing:textpane"
		substitutionGroup="cookSwing:textcomponent" />



	<!-- common components -->
	<complexType name="button">
		<complexContent>
			<extension base="cookSwing:abstractbutton">
				<attribute name="defaultcapable" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="buttongroup">
		<complexContent>
			<extension base="cookSwing:component" />
		</complexContent>
	</complexType>

	<complexType name="checkbox">
		<complexContent>
			<extension base="cookSwing:abstractbutton">
				<attribute name="borderpaintedflat" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="colorchooser">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="color" type="string" />
				<attribute name="dragenabled" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="combobox">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="editable" type="boolean" />
				<attribute name="lightweightpopupenabled" type="boolean" />
				<attribute name="maximumrowcount" type="int" />
				<attribute name="popupvisible" type="boolean" />
				<attribute name="selectedindex" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="filechooser">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="acceptallfilefilterused" type="boolean" />
				<attribute name="approvebuttonmnemonic" type="string" />
				<attribute name="approvebuttontext" type="string" />
				<attribute name="approvebuttontooltiptext" type="string" />
				<attribute name="controlbuttonsareshown" type="boolean" />
				<attribute name="dragenabled" type="boolean" />
				<attribute name="dialogtype" type="cookSwing:dialogtype" />
				<attribute name="dialogtitle" type="string" />
				<attribute name="filehidingenabled" type="boolean" />
				<attribute name="fileselectionmode" type="cookSwing:fileselectionmode" />
				<attribute name="multiselectionenabled" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="label">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="disabledicon" type="string" />
				<attribute name="displayedmnemonic" type="string" />
				<attribute name="displayedmnemonicindex" type="int" />
				<attribute name="horizontalalignment" type="cookSwing:horizontalalignment" />
				<attribute name="horizontaltextposition" type="cookSwing:horizontaltextposition" />
				<attribute name="icon" type="string" />
				<attribute name="icontextgap" type="int" />
				<attribute name="labelfor" type="string" />
				<attribute name="text" type="string" />
				<attribute name="verticalalignment" type="cookSwing:verticalalignment" />
				<attribute name="verticaltextposition" type="cookSwing:verticaltextposition" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="list">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="dragenabled" type="boolean" />
				<attribute name="fixedcellheight" type="int" />
				<attribute name="fixedcellwidth" type="int" />
				<attribute name="layoutorientation" type="cookSwing:layoutorientation" />
				<attribute name="selectedindex" type="int" />
				<attribute name="selectionbackground" type="cookSwing:color" />
				<attribute name="selectionforeground" type="cookSwing:color" />
				<attribute name="selectionmode" type="cookSwing:selectionmode" />
				<attribute name="visiblerowcount" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="progressbar">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="indeterminate" type="boolean" />
				<attribute name="maximum" type="int" />
				<attribute name="minimum" type="int" />
				<attribute name="orientation" type="cookSwing:orientation" />
				<attribute name="string" type="string" />
				<attribute name="stringpainted" type="boolean" />
				<attribute name="value" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="radiobutton">
		<complexContent>
			<extension base="cookSwing:abstractbutton" />
		</complexContent>
	</complexType>

	<complexType name="scrollbar">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="maximum" type="int" />
				<attribute name="minimum" type="int" />
				<attribute name="orientation" type="cookSwing:orientation" />
				<attribute name="unitincrement" type="int" />
				<attribute name="value" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="separator">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="orientation" type="cookSwing:orientation" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="slider">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="inverted" type="boolean" />
				<attribute name="majortickspacing" type="int" />
				<attribute name="maximum" type="int" />
				<attribute name="minimum" type="int" />
				<attribute name="minortickspacing" type="int" />
				<attribute name="orientation" type="cookSwing:orientation" />
				<attribute name="paintlabels" type="boolean" />
				<attribute name="paintticks" type="boolean" />
				<attribute name="painttrack" type="boolean" />
				<attribute name="snaptoticks" type="boolean" />
				<attribute name="value" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="spinner">
		<complexContent>
			<extension base="cookSwing:component" />
		</complexContent>
	</complexType>

	<complexType name="spinner-dateeditor">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="format" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="spinner-defaulteditor">
		<complexContent>
			<extension base="cookSwing:component" />
		</complexContent>
	</complexType>

	<complexType name="spinner-listeditor">
		<complexContent>
			<extension base="cookSwing:component" />
		</complexContent>
	</complexType>

	<complexType name="spinner-numbereditor">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="format" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="spinnerdatemodel">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="calendarfield" type="cookSwing:calendarfield" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="spinnerlistmodel">
		<complexContent>
			<extension base="cookSwing:component" />
		</complexContent>
	</complexType>

	<complexType name="spinnernumbermodel">
		<complexContent>
			<extension base="cookSwing:component" />
		</complexContent>
	</complexType>

	<complexType name="splitpane">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="continuouslayout" type="boolean" />
				<attribute name="dividerlocation" type="float" />
				<attribute name="dividersize" type="int" />
				<attribute name="lastdividerlocation" type="int" />
				<attribute name="onetouchexpandable" type="boolean" />
				<attribute name="orientation" type="cookSwing:splitorientation" />
				<attribute name="resizeweight" type="float" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="tab">
		<complexContent>
			<extension base="cookXmlCommon:object">
				<attribute name="background" type="cookSwing:color" />
				<attribute name="disabledicon" type="string" />
				<attribute name="displayedmnemonicindex" type="int" />
				<attribute name="enabled" type="boolean" />
				<attribute name="foreground" type="cookSwing:color" />
				<attribute name="icon" type="string" />
				<attribute name="mnemonic" type="string" />
				<attribute name="title" type="string" />
				<attribute name="tooltiptext" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="table">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="autocreatecolumnsfrommodel" type="boolean" />
				<attribute name="autoresizemode" type="cookSwing:autoresizemode" />
				<attribute name="cellselectionenabled" type="boolean" />
				<attribute name="columnselectionallowed" type="boolean" />
				<attribute name="editingcolumn" type="int" />
				<attribute name="editingrow" type="int" />
				<attribute name="gridcolor" type="cookSwing:color" />
				<attribute name="intercellspacing" type="cookSwing:dimension" />
				<attribute name="preferredscrollableviewportsize" type="cookSwing:dimension" />
				<attribute name="rowheight" type="int" />
				<attribute name="rowmargin" type="int" />
				<attribute name="rowselectionallowed" type="boolean" />
				<attribute name="selectionbackground" type="cookSwing:color" />
				<attribute name="selectionmode" type="string" />
				<attribute name="showgrid" type="boolean" />
				<attribute name="showhorizontallines" type="boolean" />
				<attribute name="showverticallines" type="boolean" />
				<attribute name="surrendersfocusonkeystroke" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="tableheader">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="reorderingallowed" type="boolean" />
				<!-- TODO -->
			</extension>
		</complexContent>
	</complexType>

	<complexType name="togglebutton">
		<complexContent>
			<extension base="cookSwing:abstractbutton">
				<attribute name="pressed" type="boolean" />
				<attribute name="selected" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="tooltip">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="tiptext" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="tree">
		<complexContent>
			<extension base="cookSwing:component">
				<attribute name="expandsselectedpaths" type="boolean" />
				<attribute name="invokesstopcellediting" type="boolean" />
				<attribute name="largemodel" type="boolean" />
				<attribute name="rootvisible" type="boolean" />
				<attribute name="rowheight" type="int" />
				<attribute name="scrollsonexpand" type="boolean" />
				<attribute name="selectionrow" type="int" />
				<attribute name="showsroothandles" type="boolean" />
				<attribute name="toggleclickcount" type="int" />
				<attribute name="visiblerowcount" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<element name="button" type="cookSwing:button"
		substitutionGroup="cookSwing:abstractbutton" />
	<element name="buttongroup" type="cookSwing:buttongroup"
		substitutionGroup="cookSwing:component" />
	<element name="checkbox" type="cookSwing:checkbox"
		substitutionGroup="cookSwing:abstractbutton" />
	<element name="colorchooser" type="cookSwing:colorchooser"
		substitutionGroup="cookSwing:component" />
	<element name="combobox" type="cookSwing:combobox"
		substitutionGroup="cookSwing:component" />
	<element name="filechooser" type="cookSwing:filechooser"
		substitutionGroup="cookSwing:component" />
	<element name="label" type="cookSwing:label" substitutionGroup="cookSwing:component" />
	<element name="list" type="cookSwing:list" substitutionGroup="cookSwing:component" />
	<element name="progressbar" type="cookSwing:progressbar"
		substitutionGroup="cookSwing:component" />
	<element name="radiobutton" type="cookSwing:radiobutton"
		substitutionGroup="cookSwing:abstractbutton" />
	<element name="scrollbar" type="cookSwing:scrollbar"
		substitutionGroup="cookSwing:component" />
	<element name="separator" type="cookSwing:separator"
		substitutionGroup="cookSwing:component" />
	<element name="slider" type="cookSwing:slider"
		substitutionGroup="cookSwing:component" />
	<element name="spinner" type="cookSwing:spinner"
		substitutionGroup="cookSwing:component" />
	<element name="spinner-dateeditor" type="cookSwing:spinner-dateeditor"
		substitutionGroup="cookSwing:component" />
	<element name="spinner-defaulteditor" type="cookSwing:spinner-defaulteditor"
		substitutionGroup="cookSwing:component" />
	<element name="spinner-listeditor" type="cookSwing:spinner-listeditor"
		substitutionGroup="cookSwing:component" />
	<element name="spinner-numbereditor" type="cookSwing:spinner-numbereditor"
		substitutionGroup="cookSwing:component" />
	<element name="spinnerdatemodel" type="cookSwing:spinnerdatemodel"
		substitutionGroup="cookSwing:component" />
	<element name="spinnerlistmodel" type="cookSwing:spinnerlistmodel"
		substitutionGroup="cookSwing:component" />
	<element name="spinnernumbermodel" type="cookSwing:spinnernumbermodel"
		substitutionGroup="cookSwing:component" />
	<element name="splitpane" type="cookSwing:splitpane"
		substitutionGroup="cookSwing:component" />
	<element name="tab" type="cookSwing:tab" substitutionGroup="cookXmlCommon:object" />
	<element name="table" type="cookSwing:table" substitutionGroup="cookSwing:component" />
	<element name="tableheader" type="cookSwing:tableheader"
		substitutionGroup="cookSwing:component" />
	<element name="togglebutton" type="cookSwing:togglebutton"
		substitutionGroup="cookSwing:abstractbutton" />
	<element name="tooltip" type="cookSwing:tooltip"
		substitutionGroup="cookSwing:component" />
	<element name="tree" type="cookSwing:tree" substitutionGroup="cookSwing:component" />




	<!-- borders -->
	<complexType name="border" abstract="true">
		<complexContent>
			<extension base="cookXmlCommon:object" />
		</complexContent>
	</complexType>

	<complexType name="bevelborder" mixed="true">
		<complexContent>
			<extension base="cookSwing:border">
				<!--
					<sequence minOccurs="0" maxOccurs="1"> <element
					ref="cookSwing:insets"></element> </sequence>
				-->
				<attribute name="highlight" type="cookSwing:color" />
				<attribute name="highlightinner" type="cookSwing:color" />
				<attribute name="highlightouter" type="cookSwing:color" />
				<attribute name="shadow" type="cookSwing:color" />
				<attribute name="shadowinner" type="cookSwing:color" />
				<attribute name="shadowouter" type="cookSwing:color" />
				<attribute name="soft" type="boolean" />
				<attribute name="type" type="cookSwing:bordertype" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="compoundborder">
		<complexContent>
			<extension base="cookSwing:border" />
		</complexContent>
	</complexType>

	<complexType name="emptyborder">
		<complexContent>
			<extension base="cookSwing:border">
				<attribute name="bottom" type="int" />
				<attribute name="insets" type="cookSwing:insets" />
				<attribute name="left" type="int" />
				<attribute name="right" type="int" />
				<attribute name="top" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="etchedborder">
		<complexContent>
			<extension base="cookSwing:border">
				<attribute name="highlight" type="cookSwing:color" />
				<attribute name="shadow" type="cookSwing:color" />
				<attribute name="type" type="cookSwing:bordertype" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="lineborder">
		<complexContent>
			<extension base="cookSwing:border">
				<attribute name="color" type="cookSwing:color" />
				<attribute name="thickness" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="matteborder" mixed="true">
		<complexContent>
			<extension base="cookSwing:border">
				<!--
					<sequence maxOccurs="unbounded" minOccurs="0"> <choice> <element
					ref="cookSwing:color"></element> <element
					ref="cookSwing:icon"></element> <element
					ref="cookSwing:insets"></element> </choice> </sequence>
				-->
				<attribute name="bottom" type="int" />
				<attribute name="color" type="cookSwing:color" />
				<attribute name="insets" type="cookSwing:insets" />
				<attribute name="left" type="int" />
				<attribute name="mattecolor" type="cookSwing:color" />
				<attribute name="right" type="int" />
				<attribute name="tileicon" type="string" />
				<attribute name="top" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="titledborder" mixed="true">
		<complexContent>
			<extension base="cookSwing:border">
				<!--
					<sequence minOccurs="0" maxOccurs="1"> <element
					ref="cookSwing:border"></element> </sequence>
				-->
				<attribute name="title" type="string" />
				<attribute name="titlecolor" type="cookSwing:color" />
				<attribute name="titlefont" type="cookSwing:font" />
				<attribute name="titlejustification" type="string" />
				<attribute name="titleposition" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<element name="border" type="cookSwing:border"
		substitutionGroup="cookXmlCommon:object" />
	<element name="bevelborder" type="cookSwing:bevelborder"
		substitutionGroup="cookSwing:border" />
	<element name="compoundborder" type="cookSwing:compoundborder"
		substitutionGroup="cookSwing:border" />
	<element name="emptyborder" type="cookSwing:emptyborder"
		substitutionGroup="cookSwing:border" />
	<element name="etchedborder" type="cookSwing:etchedborder"
		substitutionGroup="cookSwing:border" />
	<element name="lineborder" type="cookSwing:lineborder"
		substitutionGroup="cookSwing:border" />
	<element name="matteborder" type="cookSwing:matteborder"
		substitutionGroup="cookSwing:border" />
	<element name="titledborder" type="cookSwing:titledborder"
		substitutionGroup="cookSwing:border" />



	<!-- layout -->
	<complexType name="layout" abstract="true">
		<complexContent>
			<extension base="cookXmlCommon:object" />
		</complexContent>
	</complexType>

	<complexType name="borderlayout" mixed="true">
		<complexContent>
			<extension base="cookSwing:layout">
				<!--
					<sequence minOccurs="0" maxOccurs="unbounded"> <element
					ref="cookSwing:constraint"></element> </sequence>
				-->
				<attribute name="hgap" type="int" />
				<attribute name="vgap" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="constraint" mixed="true">
		<complexContent>
			<extension base="cookXmlCommon:object">
				<!--
					<sequence minOccurs="0" maxOccurs="unbounded"> <element
					ref="cookXmlCommon:object"></element> </sequence>
				-->
				<attribute name="location" type="string" />
				<attribute name="name" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="boxlayout">
		<complexContent>
			<extension base="cookSwing:layout" />
		</complexContent>
	</complexType>

	<complexType name="cardlayout">
		<complexContent>
			<extension base="cookSwing:layout">
				<attribute name="hgap" type="int" />
				<attribute name="vgap" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="flowlayout">
		<complexContent>
			<extension base="cookSwing:layout">
				<attribute name="alignment" type="string" />
				<attribute name="hgap" type="int" />
				<attribute name="vgap" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="gridbaglayout" mixed="true">
		<complexContent>
			<extension base="cookSwing:layout">
				<!--
					<sequence minOccurs="0" maxOccurs="unbounded"> <element
					ref="cookSwing:gridbagconstraints"></element> </sequence>
				-->
				<attribute name="columnweights" type="float" />
				<attribute name="columnwidths" type="int" />
				<attribute name="rowheights" type="int" />
				<attribute name="rowweights" type="float" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="gridbagconstraints" mixed="true">
		<complexContent>
			<extension base="cookXmlCommon:object">
				<!--
					<sequence minOccurs="0" maxOccurs="unbounded"> <element
					ref="cookXmlCommon:object"></element> </sequence>
				-->
				<attribute name="anchor" type="cookSwing:anchor" />
				<attribute name="fill" type="cookSwing:fill" />
				<attribute name="gridheight" type="int" />
				<attribute name="gridwidth" type="int" />
				<attribute name="gridx" type="int" />
				<attribute name="gridy" type="int" />
				<attribute name="insets" type="cookSwing:insets" />
				<attribute name="ipadx" type="int" />
				<attribute name="ipady" type="int" />
				<attribute name="weightx" type="float" />
				<attribute name="weighty" type="float" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="gridlayout">
		<complexContent>
			<extension base="cookSwing:layout">
				<attribute name="columns" type="int" />
				<attribute name="hgap" type="int" />
				<attribute name="rows" type="int" />
				<attribute name="vgap" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="overlaylayout">
		<complexContent>
			<extension base="cookSwing:layout" />
		</complexContent>
	</complexType>

	<complexType name="springgridlayout">
		<complexContent>
			<extension base="cookSwing:layout">
				<attribute name="columns" type="int" />
				<attribute name="compact" type="boolean" />
				<attribute name="initialx" type="int" />
				<attribute name="initialy" type="int" />
				<attribute name="hgap" type="int" />
				<attribute name="rows" type="int" />
				<attribute name="vgap" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="springlayout" mixed="true">
		<complexContent>
			<extension base="cookSwing:layout">
				<!--
					<sequence minOccurs="0" maxOccurs="unbounded"> <element
					ref="cookSwing:springconstraint"></element> </sequence>
				-->
			</extension>
		</complexContent>
	</complexType>

	<complexType name="springconstraint">
		<complexContent>
			<extension base="cookXmlCommon:object">
				<attribute name="clearheight" type="boolean" />
				<attribute name="clearwidth" type="boolean" />
				<attribute name="edge1" type="string" />
				<attribute name="edge2" type="string" />
				<attribute name="maxheight" type="int" />
				<attribute name="maxwidth" type="int" />
				<attribute name="minheight" type="int" />
				<attribute name="minwidth" type="int" />
				<attribute name="pad" type="int" />
				<attribute name="preferredheight" type="int" />
				<attribute name="preferredwidth" type="int" />
				<attribute name="xpad" type="int" />
				<attribute name="ypad" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="spring">
		<complexContent>
			<extension base="cookXmlCommon:object"></extension>
		</complexContent>
	</complexType>

	<element name="layout" type="cookSwing:layout"
		substitutionGroup="cookXmlCommon:object" />
	<element name="borderlayout" type="cookSwing:borderlayout"
		substitutionGroup="cookSwing:layout" />
	<element name="constraint" type="cookSwing:constraint"
		substitutionGroup="cookXmlCommon:object" />
	<element name="boxlayout" type="cookSwing:boxlayout"
		substitutionGroup="cookSwing:layout" />
	<element name="cardlayout" type="cookSwing:cardlayout"
		substitutionGroup="cookSwing:layout" />
	<element name="flowlayout" type="cookSwing:flowlayout"
		substitutionGroup="cookSwing:layout" />
	<element name="gridbaglayout" type="cookSwing:gridbaglayout"
		substitutionGroup="cookSwing:layout" />
	<element name="gridbagconstraints" type="cookSwing:gridbagconstraints"
		substitutionGroup="cookXmlCommon:object" />
	<element name="gridlayout" type="cookSwing:gridlayout"
		substitutionGroup="cookSwing:layout" />
	<element name="overlaylayout" type="cookSwing:overlaylayout"
		substitutionGroup="cookSwing:layout" />
	<element name="springgridlayout" type="cookSwing:springgridlayout"
		substitutionGroup="cookSwing:layout" />
	<element name="springlayout" type="cookSwing:springlayout"
		substitutionGroup="cookSwing:layout" />
	<element name="springconstraint" type="cookSwing:springconstraint"
		substitutionGroup="cookXmlCommon:object" />
	<element name="spring" type="cookSwing:spring"
		substitutionGroup="cookXmlCommon:object" />



	<!-- formatters -->
	<complexType name="formatter" abstract="true">
		<complexContent>
			<extension base="cookXmlCommon:object">
				<attribute name="allowsinvalid" type="boolean" />
				<attribute name="commitsonvalidedit" type="boolean" />
				<attribute name="overwritemode" type="boolean" />
				<attribute name="valueclass" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="defaultformatter">
		<complexContent>
			<extension base="cookSwing:formatter" />
		</complexContent>
	</complexType>

	<complexType name="dateformatter" mixed="true">
		<complexContent>
			<extension base="cookSwing:formatter">
				<!--
					<sequence minOccurs="0" maxOccurs="1"> <element
					ref="cookXmlCommon:dateformat"></element> </sequence>
				-->
				<attribute name="maximum" type="string" />
				<attribute name="minimum" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="internationalformatter">
		<complexContent>
			<extension base="cookSwing:formatter">
				<attribute name="maximum" type="string" />
				<attribute name="minimum" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="maskformatter">
		<complexContent>
			<extension base="cookSwing:formatter">
				<attribute name="invalidcharacters" type="string" />
				<attribute name="mask" type="string" />
				<attribute name="placeholder" type="string" />
				<attribute name="placeholdercharacter" type="string" />
				<attribute name="validcharacters" type="string" />
				<attribute name="valuecontainsliteralcharacters" type="boolean" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="numberformatter">
		<complexContent>
			<extension base="cookSwing:formatter">
				<attribute name="maximum" type="string" />
				<attribute name="minimum" type="string" />
			</extension>
		</complexContent>
	</complexType>

	<element name="formatter" type="cookSwing:formatter"
		substitutionGroup="cookXmlCommon:object" />
	<element name="defaultformatter" type="cookSwing:defaultformatter"
		substitutionGroup="cookSwing:formatter" />
	<element name="dateformatter" type="cookSwing:dateformatter"
		substitutionGroup="cookSwing:formatter" />
	<element name="internationalformatter" type="cookSwing:internationalformatter"
		substitutionGroup="cookSwing:formatter" />
	<element name="maskformatter" type="cookSwing:maskformatter"
		substitutionGroup="cookSwing:formatter" />
	<element name="numberformatter" type="cookSwing:numberformatter"
		substitutionGroup="cookSwing:formatter" />


	<!-- default models -->
	<complexType name="defaultlistmodel">
		<complexContent>
			<extension base="cookXmlCommon:object">
				<attribute name="size" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="defaulttablemodel">
		<complexContent>
			<extension base="cookXmlCommon:object">
				<attribute name="columncount" type="int" />
				<attribute name="numrows" type="int" />
				<attribute name="rowcount" type="int" />
			</extension>
		</complexContent>
	</complexType>

	<complexType name="syncbuttonstate">
		<complexContent>
			<extension base="cookXmlCommon:object" />
		</complexContent>
	</complexType>

	<element name="defaultlistmodel" type="cookSwing:defaultlistmodel"
		substitutionGroup="cookXmlCommon:object" />
	<element name="defaulttablemodel" type="cookSwing:defaulttablemodel"
		substitutionGroup="cookXmlCommon:object" />
	<element name="syncbuttonstate" type="cookSwing:syncbuttonstate"
		substitutionGroup="cookXmlCommon:object" />



	<!-- common types -->
	<!--
		<complexType name="uimanager"> <complexContent> <extension
		base="cookXmlCommon:object"> <attribute name="systemlookandfeel"
		type="boolean" /> <attribute name="lookandfeel" type="string" />
		</extension> </complexContent> </complexType> <complexType
		name="color"> <complexContent> <extension base="cookXmlCommon:object">
		<attribute name="locale" type="string" /> <attribute name="ui"
		type="string" /> <attribute name="value" type="string" /> </extension>
		</complexContent> </complexType> <complexType name="cursor">
		<complexContent> <extension base="cookXmlCommon:object"> <attribute
		name="type" type="string" /> </extension> </complexContent>
		</complexType> <complexType name="dimension"> <complexContent>
		<extension base="cookXmlCommon:object"> <attribute name="height"
		type="int" /> <attribute name="width" type="int" /> </extension>
		</complexContent> </complexType> <complexType name="font">
		<complexContent> <extension base="cookXmlCommon:object"> <attribute
		name="locale" type="string" /> <attribute name="src" type="string" />
		<attribute name="ui" type="string" /> </extension> </complexContent>
		</complexType> <complexType name="icon"> <complexContent> <extension
		base="cookXmlCommon:object"> <attribute name="locale" type="string" />
		<attribute name="src" type="string" /> <attribute name="ui"
		type="string" /> </extension> </complexContent> </complexType>

		<complexType name="image"> <complexContent> <extension
		base="cookXmlCommon:object"> <attribute name="src" type="string" />
		</extension> </complexContent> </complexType> <complexType
		name="imageicon"> <complexContent> <extension
		base="cookXmlCommon:object"> <attribute name="src" type="string" />
		</extension> </complexContent> </complexType> <complexType
		name="insets"> <complexContent> <extension
		base="cookXmlCommon:object"> <attribute name="bottom" type="int" />
		<attribute name="left" type="int" /> <attribute name="right"
		type="int" /> <attribute name="top" type="int" /> </extension>
		</complexContent> </complexType> <complexType name="keystroke">
		<complexContent> <extension base="cookXmlCommon:object"> <attribute
		name="keychar" type="string" /> <attribute name="keycode"
		type="string" /> <attribute name="modifiers" type="string" />
		<attribute name="onkeyrelease" type="boolean" /> <attribute
		name="string" type="string" /> </extension> </complexContent>
		</complexType> <complexType name="point"> <complexContent> <extension
		base="cookXmlCommon:object"> <attribute name="x" type="int" />
		<attribute name="y" type="int" /> </extension> </complexContent>
		</complexType> <complexType name="rectangle"> <complexContent>
		<extension base="cookXmlCommon:object"> <attribute name="bounds"
		type="string" /> <attribute name="height" type="int" /> <attribute
		name="location" type="string" /> <attribute name="size" type="string"
		/> <attribute name="width" type="int" /> <attribute name="x"
		type="int" /> <attribute name="y" type="int" /> </extension>
		</complexContent> </complexType>
	-->
	<!-- Common simple types -->

	<simpleType name="color">
		<annotation>
			<documentation>
				<![CDATA[There are three valid types of values:

	* "#rrggbb" or "rrggbb" for RGB color.
	* Name of predefined colors in java.awt.Color.
	* ui:key for colors that can be retrieved from UIManager with the given key.
				]]>
			</documentation>
		</annotation>
		<restriction base="string"></restriction>
	</simpleType>

	<simpleType name="cursor">
		<annotation>
			<documentation>
				<![CDATA["One of the cursor names defined in java.awt.Cursor without the _CURSOR  suffix 
				(e.g "HAND" would be converted to a hand cursor).]]>
			</documentation>
		</annotation>
		<restriction base="string"></restriction>
	</simpleType>

	<simpleType name="dimension">
		<annotation>
			<documentation>
				<![CDATA["# #", "#,#" or "#x#" format. to specify the width, then height of the dimension.]]>
			</documentation>
		</annotation>
		<restriction base="string"></restriction>
	</simpleType>
	
	<simpleType name="insets">
		<annotation>
			<documentation>
				<![CDATA[The format is "#,#,#,#" in the order of top, left, bottom and right.]]>
			</documentation>
		</annotation>
		<restriction base="string"></restriction>
	</simpleType>

	<simpleType name="font">
		<annotation>
			<documentation>
				<![CDATA[There are two valid types of values:

	* "fontname,style,size". For example, "monospace,bold italic,12".
	* ui:key for fonts that can be retrieved from UIManager with the given key.
				]]>
			</documentation>
		</annotation>
		<restriction base="string"></restriction>
	</simpleType>

	<simpleType name="locale">
		<annotation>
			<documentation>
				<![CDATA[The format is "lang_country_variant". For example, "en_US".]]>
			</documentation>
		</annotation>
		<restriction base="string"></restriction>
	</simpleType>

	<simpleType name="point">
		<annotation>
			<documentation>
				<![CDATA[The format is "x,y" or "x y" to specify the x and y postions.]]>
			</documentation>
		</annotation>
		<restriction base="string"></restriction>
	</simpleType>

	<simpleType name="rectangle">
		<annotation>
			<documentation>
				<![CDATA[The format is "#,#,#,#" in the order of x, y, width, and height.]]>
			</documentation>
		</annotation>
		<restriction base="string"></restriction>
	</simpleType>

	<simpleType name="debugoption">
		<annotation>
			<documentation>
				<![CDATA[determines how the component should display the information; one of the following options:

	* LOG_OPTION - causes a text message to be printed.
	* FLASH_OPTION - causes the drawing to flash several times.
	* BUFFERED_OPTION - creates an ExternalWindow that displays the operations performed 
		on the View's offscreen buffer.
	* NONE_OPTION disables debugging.
	* A value of 0 causes no changes to the debugging options. 

debugoption is bitwise OR'd into the current value
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="LOG_OPTION" />
			<enumeration value="FLASH_OPTION" />
			<enumeration value="BUFFERED_OPTION" />
			<enumeration value="NONE_OPTION" />
			<enumeration value="0" />
		</restriction>
	</simpleType>

	<simpleType name="dragmode">
		<annotation>
			<documentation>
				<![CDATA[Sets the "dragging style" used by the desktop pane. one of the following options:

	* LIVE_DRAG_MODE - Indicates that the entire contents of the item being dragged
		should appear inside the desktop pane.
	* OUTLINE_DRAG_MODE - Indicates that an outline only of the item being dragged 
		should appear inside the desktop pane.
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="LIVE_DRAG_MODE" />
			<enumeration value="OUTLINE_DRAG_MODE" />
		</restriction>
	</simpleType>

	<simpleType name="framestate">
		<annotation>
			<documentation>
				<![CDATA[Sets the state of this frame. The state is represented as a bitwise mask.

	* NORMAL
		Indicates that no state bits are set.
	* ICONIFIED
	* MAXIMIZED_HORIZ
	* MAXIMIZED_VERT
	* MAXIMIZED_BOTH
		Concatenates MAXIMIZED_HORIZ and MAXIMIZED_VERT. 

Note that if the state is not supported on a given platform, nothing will happen.
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="NORMAL" />
			<enumeration value="ICONIFIED" />
			<enumeration value="MAXIMIZED_HORIZ" />
			<enumeration value="MAXIMIZED_VERT" />
			<enumeration value="MAXIMIZED_BOTH" />
		</restriction>
	</simpleType>

	<simpleType name="horizontalscrollbarpolicy">
		<annotation>
			<documentation>
				<![CDATA[Determines when the horizontal scrollbar appears in the scrollpane. The options are:

	* HORIZONTAL_SCROLLBAR_AS_NEEDED
	* HORIZONTAL_SCROLLBAR_NEVER
	* HORIZONTAL_SCROLLBAR_ALWAYS 
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="HORIZONTAL_SCROLLBAR_AS_NEEDED" />
			<enumeration value="HORIZONTAL_SCROLLBAR_NEVER" />
			<enumeration value="HORIZONTAL_SCROLLBAR_ALWAYS" />
		</restriction>
	</simpleType>

	<simpleType name="verticalscrollbarpolicy">
		<annotation>
			<documentation>
				<![CDATA[Determines when the vertical scrollbar appears in the scrollpane. Legal values are:

	* VERTICAL_SCROLLBAR_AS_NEEDED
	* VERTICAL_SCROLLBAR_NEVER
	* VERTICAL_SCROLLBAR_ALWAYS
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="VERTICAL_SCROLLBAR_AS_NEEDED" />
			<enumeration value="VERTICAL_SCROLLBAR_NEVER" />
			<enumeration value="VERTICAL_SCROLLBAR_ALWAYS" />
		</restriction>
	</simpleType>

	<simpleType name="tablayoutpolicy">
		<annotation>
			<documentation>
				<![CDATA[Sets the policy which the tabbedpane will use in laying out the tabs when all the tabs will not fit within a single run. Possible values are:

	* WRAP_TAB_LAYOUT
	* SCROLL_TAB_LAYOUT 

The default value, if not set by the UI, is WRAP_TAB_LAYOUT. 
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="WRAP_TAB_LAYOUT" />
			<enumeration value="SCROLL_TAB_LAYOUT" />
		</restriction>
	</simpleType>

	<simpleType name="tabplacement">
		<annotation>
			<documentation>
				<![CDATA[Sets the tab placement for this tabbedpane. Possible values are:
	
	* TOP
	* BOTTOM
	* LEFT
	* RIGHT 
	
The default value, if not set, is TOP.
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="TOP" />
			<enumeration value="BOTTOM" />
			<enumeration value="LEFT" />
			<enumeration value="RIGHT" />
		</restriction>
	</simpleType>

	<simpleType name="windowdecorationstyle">
		<annotation>
			<documentation>
				<![CDATA[Sets the type of Window decorations (such as borders, widgets for closing a Window, title ...)
			the JRootPane should provide. The default is to provide no Window decorations (NONE). 
			Possible values are: NONE, FRAME, PLAIN_DIALOG, INFORMATION_DIALOG, ERROR_DIALOG, 
			COLOR_CHOOSER_DIALOG, FILE_CHOOSER_DIALOG, QUESTION_DIALOG, or WARNING_DIALOG
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="NONE" />
			<enumeration value="FRAME" />
			<enumeration value="PLAIN_DIALOG" />
			<enumeration value="INFORMATION_DIALOG" />
			<enumeration value="ERROR_DIALOG" />
			<enumeration value="COLOR_CHOOSER_DIALOG" />
			<enumeration value="FILE_CHOOSER_DIALOG" />
			<enumeration value="QUESTION_DIALOG" />
			<enumeration value="WARNING_DIALOG" />
		</restriction>
	</simpleType>

	<simpleType name="horizontalalignment">
		<annotation>
			<documentation>
				<![CDATA[Sets the horizontal alignment of the text. Valid keys are:

	* LEFT
	* CENTER
	* RIGHT
	* LEADING
	* TRAILING 
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="LEFT" />
			<enumeration value="CENTER" />
			<enumeration value="RIGHT" />
			<enumeration value="LEADING" />
			<enumeration value="TRAILING" />
		</restriction>
	</simpleType>
	
	<simpleType name="horizontaltextposition">
		<annotation>
			<documentation>
				<![CDATA[Sets the horizontal position of the label's text, relative to its image.  Valid keys are:

	* LEFT
	* CENTER
	* RIGHT
	* LEADING
	* TRAILING 
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="LEFT" />
			<enumeration value="CENTER" />
			<enumeration value="RIGHT" />
			<enumeration value="LEADING" />
			<enumeration value="TRAILING" />
		</restriction>
	</simpleType>
	
	<simpleType name="verticalalignment">
		<annotation>
			<documentation>
				<![CDATA[Sets the alignment of the label's contents along the Y axis.

	The default value of this property is CENTER. 

	* TOP
	* CENTER
	* BOTTOM
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="TOP" />
			<enumeration value="CENTER" />
			<enumeration value="BOTTOM" />
		</restriction>
	</simpleType>
	
	<simpleType name="verticaltextposition">
		<annotation>
			<documentation>
				<![CDATA[Sets the vertical position of the label's text, relative to its image. 

	The default value of this property is CENTER. 

	* TOP
	* CENTER
	* BOTTOM
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="TOP" />
			<enumeration value="CENTER" />
			<enumeration value="BOTTOM" />
		</restriction>
	</simpleType>
	
	<simpleType name="dialogtype">
		<annotation>
			<documentation>
				<![CDATA[dialogType - the type of dialog to be displayed:

	* OPEN_DIALOG
	* SAVE_DIALOG
	* CUSTOM_DIALOG 

				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="OPEN_DIALOG" />
			<enumeration value="SAVE_DIALOG" />
			<enumeration value="CUSTOM_DIALOG" />
		</restriction>
	</simpleType>
	
	<simpleType name="fileselectionmode">
		<annotation>
			<documentation>
				<![CDATA[mode - the type of files to be displayed:

	* FILES_ONLY
	* DIRECTORIES_ONLY
	* FILES_AND_DIRECTORIES 

				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="FILES_ONLY" />
			<enumeration value="DIRECTORIES_ONLY" />
			<enumeration value="FILES_AND_DIRECTORIES" />
		</restriction>
	</simpleType>
	
	<simpleType name="layoutorientation">
		<annotation>
			<documentation>
				<![CDATA[Defines the way list cells are layed out:

	* VERTICAL
	* HORIZONTAL_WRAP
	* VERTICAL_WRAP

				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="VERTICAL" />
			<enumeration value="HORIZONTAL_WRAP" />
			<enumeration value="VERTICAL_WRAP" />
		</restriction>
	</simpleType>
	
	<simpleType name="selectionmode">
		<annotation>
			<documentation>
				<![CDATA[Determines whether single-item or multiple-item selections are allowed. The following selectionMode values are allowed: 

	* SINGLE_SELECTION
	* SINGLE_INTERVAL_SELECTION
	* MULTIPLE_INTERVAL_SELECTION

				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="SINGLE_SELECTION" />
			<enumeration value="SINGLE_INTERVAL_SELECTION" />
			<enumeration value="MULTIPLE_INTERVAL_SELECTION" />
		</restriction>
	</simpleType>
	
	<simpleType name="orientation">
		<annotation>
			<documentation>
				<![CDATA[Sets the orientation:

	* VERTICAL
	* HORIZONTAL

				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="VERTICAL" />
			<enumeration value="HORIZONTAL" />
		</restriction>
	</simpleType>
	
	<simpleType name="splitorientation">
		<annotation>
			<documentation>
				<![CDATA[Sets the orientation, or how the splitter is divided. The options are:

    * VERTICAL_SPLIT (above/below orientation of components)
    * HORIZONTAL_SPLIT (left/right orientation of components) 

				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="VERTICAL_SPLIT" />
			<enumeration value="HORIZONTAL_SPLIT" />
		</restriction>
	</simpleType>
	
	<simpleType name="bordertype">
		<annotation>
			<documentation>
				<![CDATA[RAISED or LOWERED border.]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="RAISED" />
			<enumeration value="LOWERED" />
		</restriction>
	</simpleType>
	
	<simpleType name="calendarfield">
		<annotation>
			<documentation>
				<![CDATA[ The legal values for calendarField are:

	* ERA
	* YEAR
	* MONTH
	* WEEK_OF_YEAR
	* WEEK_OF_MONTH
	* DAY_OF_MONTH
	* DAY_OF_YEAR
	* DAY_OF_WEEK
	* DAY_OF_WEEK_IN_MONTH
	* AM_PM
	* HOUR
	* HOUR_OF_DAY
	* MINUTE
	* SECOND
	* MILLISECOND 
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="VERTICAL" />
			<enumeration value="HORIZONTAL" />
		</restriction>
	</simpleType>
	
	<simpleType name="autoresizemode">
		<annotation>
			<documentation>
				<![CDATA[mode - One of 5 legal values:
				AUTO_RESIZE_OFF, AUTO_RESIZE_NEXT_COLUMN, AUTO_RESIZE_SUBSEQUENT_COLUMNS, AUTO_RESIZE_LAST_COLUMN, AUTO_RESIZE_ALL_COLUMNS
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="AUTO_RESIZE_OFF" />
			<enumeration value="AUTO_RESIZE_NEXT_COLUMN" />
			<enumeration value="AUTO_RESIZE_SUBSEQUENT_COLUMNS" />
			<enumeration value="AUTO_RESIZE_LAST_COLUMN" />
			<enumeration value="AUTO_RESIZE_ALL_COLUMNS" />
		</restriction>
	</simpleType>
	
	<simpleType name="anchor">
		<annotation>
			<documentation>
				<![CDATA[This field is used when the component is smaller than its display area. It determines where, within the display area, to place the component.

	There are two kinds of possible values: relative and absolute.
	Relative values are interpreted relative to the container's component orientation property while absolute values are not. 
	The absolute values are: CENTER, NORTH, NORTHEAST, EAST, SOUTHEAST, SOUTH, SOUTHWEST, WEST, and NORTHWEST. 
	The relative values are: PAGE_START, PAGE_END, LINE_START, LINE_END, FIRST_LINE_START, FIRST_LINE_END, LAST_LINE_START and LAST_LINE_END. 
	The default value is CENTER. 
				]]>
			</documentation>
		</annotation>
		<restriction base="string"/>
	</simpleType>
	
	<simpleType name="fill">
		<annotation>
			<documentation>
				<![CDATA[This field is used when the component's display area is larger than the component's requested size. It determines whether to resize the component, and if so, how.

The following values are valid for fill:

	* NONE: Do not resize the component.
	* HORIZONTAL: Make the component wide enough to fill its display area horizontally, but do not change its height.
	* VERTICAL: Make the component tall enough to fill its display area vertically, but do not change its width.
	* BOTH: Make the component fill its display area entirely. 

The default value is NONE.
				]]>
			</documentation>
		</annotation>
		<restriction base="string">
			<enumeration value="NONE" />
			<enumeration value="HORIZONTAL" />
			<enumeration value="VERTICAL" />
			<enumeration value="BOTH" />
		</restriction>
	</simpleType>
	
	<!--
		<element name="uimanager" type="cookSwing:uimanager"
		substitutionGroup="cookXmlCommon:object" /> <element name="color"
		type="cookSwing:color" substitutionGroup="cookXmlCommon:object" />
		<element name="cursor" type="cookSwing:cursor"
		substitutionGroup="cookXmlCommon:object" /> <element name="dimension"
		type="cookSwing:dimension" substitutionGroup="cookXmlCommon:object" />
		<element name="font" type="cookSwing:font"
		substitutionGroup="cookXmlCommon:object" /> <element name="icon"
		type="cookSwing:icon" substitutionGroup="cookXmlCommon:object" />
		<element name="image" type="cookSwing:image"
		substitutionGroup="cookXmlCommon:object" /> <element name="imageicon"
		type="cookSwing:imageicon" substitutionGroup="cookXmlCommon:object" />
		<element name="insets" type="cookSwing:insets"
		substitutionGroup="cookXmlCommon:object" /> <element name="keystroke"
		type="cookSwing:keystroke" substitutionGroup="cookXmlCommon:object" />
		<element name="point" type="cookSwing:point"
		substitutionGroup="cookXmlCommon:object" /> <element name="rectangle"
		type="cookSwing:rectangle" substitutionGroup="cookXmlCommon:object" />
	-->
</schema>