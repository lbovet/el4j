<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com/DTD SQL Map 2.0//EN"
	"http://www.ibatis.com/dtd/sql-map-2.dtd">
	
<sqlMap namespace="refdb-core">
    <!-- Version: $Revision$ -->
    <!-- Source: $Source$ -->
    <!-- Date: $Date$ -->
    <!-- Author: $Author$ -->

    <!-- 
        Link related invocations
    -->
    <resultMap id="link" class="ch.elca.el4j.apps.refdb.dto.LinkDto">
        <result property="key" column="KEYID"/>
        <result property="name" column="NAME"/>
        <result property="hashValue" column="HASHVALUE"/>
        <result property="description" column="DESCRIPTION"/>
        <result property="version" column="VERSION"/>
        <result property="incomplete" column="INCOMPLETE"/>
        <result property="whenInserted" column="WHENINSERTED"/>
        <result property="date" column="DOCUMENTDATE"/>
        <result property="url" column="URL"/>
        <result property="optimisticLockingVersion" 
            column="OPTIMISTICLOCKINGVERSION"/>
        <result property="keywords" column="KEYID" 
            select="getKeywordsByReferenceKey"/>
    </resultMap>
    <statement id="getLinkByKey" 
        parameterClass="int" resultMap="link">
        select KEYID, NAME, HASHVALUE, DESCRIPTION, VERSION, INCOMPLETE, 
            WHENINSERTED, DOCUMENTDATE, URL, OPTIMISTICLOCKINGVERSION 
            from LINKS, REFERENCESTABLE
                where KEYID=#value# 
                    and KEYID=KEYTOREFERENCE
    </statement>
    <statement id="getLinksByName" 
        parameterClass="java.lang.String" resultMap="link">
        select KEYID, NAME, HASHVALUE, DESCRIPTION, VERSION, INCOMPLETE, 
            WHENINSERTED, DOCUMENTDATE, URL, OPTIMISTICLOCKINGVERSION 
            from LINKS, REFERENCESTABLE
                where NAME=#value# 
                    and KEYID=KEYTOREFERENCE
    </statement>
    <statement id="getAllLinks" resultMap="link">
        select KEYID, NAME, HASHVALUE, DESCRIPTION, VERSION, INCOMPLETE, 
            WHENINSERTED, DOCUMENTDATE, URL, OPTIMISTICLOCKINGVERSION 
            from LINKS, REFERENCESTABLE
                where KEYID=KEYTOREFERENCE
    </statement>
    <statement id="searchLinksWithFieldsNameDescription" 
        resultMap="link">
        select KEYID, NAME, HASHVALUE, DESCRIPTION, VERSION, INCOMPLETE, 
            WHENINSERTED, DOCUMENTDATE, URL, OPTIMISTICLOCKINGVERSION 
            from LINKS, REFERENCESTABLE
                where KEYID=KEYTOREFERENCE
        <dynamic>
            <isNotEmpty prepend="and" property="name">
                lower(NAME) like '%$name$%'
            </isNotEmpty>
            <isNotEmpty prepend="and" property="description">
                lower(DESCRIPTION) like '%$description$%'
            </isNotEmpty>
        </dynamic>
        order by NAME, DESCRIPTION
    </statement>
    <statement id="searchLinksWithFieldsNameDescriptionIncomplete" 
        resultMap="link">
        select KEYID, NAME, HASHVALUE, DESCRIPTION, VERSION, INCOMPLETE, 
            WHENINSERTED, DOCUMENTDATE, URL, OPTIMISTICLOCKINGVERSION 
            from LINKS, REFERENCESTABLE
                where KEYID=KEYTOREFERENCE and INCOMPLETE=#incomplete#
        <dynamic>
            <isNotEmpty prepend="and" property="name">
                lower(NAME) like '%$name$%'
            </isNotEmpty>
            <isNotEmpty prepend="and" property="description">
                lower(DESCRIPTION) like '%$description$%'
            </isNotEmpty>
        </dynamic>
        order by NAME, DESCRIPTION
    </statement>

    <delete id="deleteLink" parameterClass="int">
        delete from LINKS where KEYTOREFERENCE=#value#
    </delete>
</sqlMap>
