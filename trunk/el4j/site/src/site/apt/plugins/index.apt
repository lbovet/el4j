 -----
 Plugins
 -----
 -----
 26 Sep 2006
 -----

Plugins

  EL4J contains following Maven plugins:
  
*----------------------------+-------------------+
| <<Plugin>>                 | <<Description>>
*----------------------------+-------------------+
| {{{maven-checkclipse-helper-plugin/index.html}checkclipse-helper}}   | Configures <Checkclipse> for smooth <Checkstyle> integration in Eclipse.
*----------------------------+-------------------+
| {{{maven-env-support-plugin/index.html}env-support}}                 | To share environment variables between Maven and the running application.
*----------------------------+-------------------+
| {{{maven-file-collector-plugin/index.html}file-collector}}           | Powerful copy tool.
*----------------------------+-------------------+
| {{{maven-manifest-decorator-plugin/index.html}manifest-decorator}}   | Collects information about artifacts to reconstruct artifact dependency order on runtime.
*----------------------------+-------------------+
| {{{maven-repohelper-plugin/index.html}repohelper}}                   | Tool to install and deploy multiple libraries with its sources.
*----------------------------+-------------------+
| {{{maven-database-plugin/index.html}database}}                   	   | Plugin to automate database actions.
*----------------------------+-------------------+  
| {{{maven-depgraph-plugin/index.html}dependency-graph}}               | Tool to visualize depedency graph.
*----------------------------+-------------------+  

  Please refer also the plugin section of the reference document and the maven cheat sheet for more information. 

  The plugins can also be used from outside of EL4J, they are in our repository. Here's a sample config for your pom.xml file: 
  
  \<pluginRepository\>
  
  \ \ \<id\>elca-services\</id\>
    
  \ \ \<url\>http://el4.elca-services.ch/el4j/maven2repository\</url\>
    
  \ \ \<releases\>
    
  \ \ \ \<enabled\>true\</enabled\>
      
  \ \ \</releases\>
    
  \</pluginRepository\>
  
    
  ===========
  
  The individual plugins can then be setup like the following:
  
  
  \<plugins\>
  
  \ \ \[...\]
    
  \ \ \<plugin\>
  
  \ \ \ \<groupId\>ch.elca.el4j.maven.plugins\</groupId\>
  
  \ \ \ \<artifactId\>maven-depgraph-plugin\</artifactId\>
  
  \ \ \ \<configuration\>
  
  \ \ \ \ \<outDir\>target/site/images\</outDir\>
  
  \ \ \ \ \<outFile\>$\{pom.artifactId\}.png\</outFile\>
  
  \ \ \ \</configuration\>
  
  \ \ \ \<version\>1.1\</version\>
  
  \ \ \</plugin\>
  
  \ \ \<plugin\>
  
  \ \ \ \<groupId\>ch.elca.el4j.maven.plugins\</groupId\>
  
  \ \ \ \<artifactId\>maven-repohelper-plugin\</artifactId\>
  
  \ \ \ \<version\>1.1\</version\>
  
  \ \ \</plugin\>
  
  \ \ \<plugin\>
  
  \ \ \ \<groupId\>ch.elca.el4j.maven.plugins\</groupId\>
  
  \ \ \ \<artifactId\>maven-file-collector-plugin\</artifactId\>
  
  \ \ \ \<version\>1.1\</version\>
  
  \ \ \</plugin\>
  
  \ \ \<plugin\>
  
  \ \ \ \<groupId\>ch.elca.el4j.maven.plugins\</groupId\>
  
  \ \ \ \<artifactId\>maven-database-plugin\</artifactId\>
  
  \ \ \ \<version\>1.1\</version\>
  
  \ \ \</plugin\>    
    
  \</plugins\>
  

