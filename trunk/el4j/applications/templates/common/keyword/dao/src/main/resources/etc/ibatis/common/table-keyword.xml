<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="keyword-core">
    <!-- Version: $Revision$ -->
    <!-- URL: $URL$ -->
    <!-- Date: $Date$ -->
    <!-- Author: $Author$ -->

    <!-- 
        Keyword related invocations
    -->
    <resultMap id="keyword"
        class="ch.elca.el4j.apps.keyword.dom.Keyword">
        <result property="key" column="KEYID" columnIndex="1" />
        <result property="name" column="NAME" columnIndex="2" />
        <result property="description" column="DESCRIPTION" columnIndex="3" />
        <result property="optimisticLockingVersion" 
            column="OPTIMISTICLOCKINGVERSION" columnIndex="4" />
    </resultMap>

    <select id="getKeywordByKey" 
        parameterClass="int" resultMap="keyword">
        select KEYID, NAME, DESCRIPTION, OPTIMISTICLOCKINGVERSION from KEYWORDS
            where KEYID = #value#
    </select>

    <select id="getKeywordByName" 
        parameterClass="string" resultMap="keyword">
        select KEYID, NAME, DESCRIPTION, OPTIMISTICLOCKINGVERSION from KEYWORDS
            where NAME = #value#
    </select>

    <select id="getAllKeywords" resultMap="keyword">
        select KEYID, NAME, DESCRIPTION, OPTIMISTICLOCKINGVERSION from KEYWORDS
        order by NAME
    </select>

    <select id="searchKeywords" resultMap="keyword" parameterClass="list">
        select KEYID, NAME, DESCRIPTION, OPTIMISTICLOCKINGVERSION from KEYWORDS
        <!--
            HACK!
            This will be replaced by an easier solution.
            (MZE, 23/12/2005)
        -->
        <iterate prepend="where" conjunction="and">
            <isEqual property="[].type" compareValue="like">
                <isEqual property="[].field" compareValue="name">
                    <isEqual property="[].caseSensitive" compareValue="true">
                        NAME like #[].stringValue#
                    </isEqual>
                    <isNotEqual property="[].caseSensitive" compareValue="true">
                        upper(NAME) like upper(#[].stringValue#)
                    </isNotEqual>
                </isEqual>
                <isEqual property="[].field" compareValue="description">
                    <isEqual property="[].caseSensitive" compareValue="true">
                        DESCRIPTION like #[].stringValue#
                    </isEqual>
                    <isNotEqual property="[].caseSensitive" compareValue="true">
                        upper(DESCRIPTION) like upper(#[].stringValue#)
                    </isNotEqual>
                </isEqual>
            </isEqual>
        </iterate>
        order by NAME
    </select>

    <select id="refreshKeyword" resultMap="keyword">
        select KEYID, NAME, DESCRIPTION, OPTIMISTICLOCKINGVERSION from KEYWORDS
            where KEYID = #key#
    </select>

    <delete id="deleteKeyword">
        delete from KEYWORDS where KEYID=#key# AND
        OPTIMISTICLOCKINGVERSION=#optimisticLockingVersion#
    </delete>
    
    <delete id="deleteKeywordById" parameterClass="int">
        delete from KEYWORDS where KEYID=#value#
    </delete>
</sqlMap>
