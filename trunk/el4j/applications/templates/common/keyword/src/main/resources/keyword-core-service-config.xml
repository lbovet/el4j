<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

	<!-- $Revision$ -->
	<!-- $URL$ -->
	<!-- $Date$ -->
	<!-- $Author$ -->

	<!-- Allows to register DAOs. Automatically collects all GenericDaos from the application context -->
	<bean id="daoRegistry"
		class="ch.elca.el4j.services.persistence.generic.dao.impl.DefaultDaoRegistry" />
	
	<bean id="keywordService"
		class="ch.elca.el4j.apps.keyword.service.impl.DefaultKeywordService">
		<property name="daoRegistry">
			<ref bean="daoRegistry"/>
		</property>
	</bean>
	
	<!-- Declaration of a sample interceptor (to see how it is done) -->
	
	<bean id="testInterceptor" class="org.springframework.aop.interceptor.DebugInterceptor">
	</bean>
	
	<bean id="autoProxy" class="ch.elca.el4j.core.aop.ExclusiveBeanNameAutoProxyCreator">
		<property name="beanNames" value="*Dao"/>
		
		<!--  
			This order indicates in what order this auto proxy creator is applied.
			Out of the box, the auto proxy creator that applies the transaction
			interceptor has the order "100", so it is applied before this auto
			proxy creator (so the transaction interceptor is AFTER this interceptor). 
			These orders can be changed. 
			Refer also to the file 'transactionJava5Annotations.xml' for more info.  
		-->
		<property name="order" value="200"></property>
		<property name="proxyTargetClass" value="false"/>		
		<property name="interceptorNames">
			<list>
				<value>testInterceptor</value>
			</list>
		</property>
	</bean>
	
</beans>