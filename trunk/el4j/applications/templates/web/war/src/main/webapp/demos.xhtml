<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
                      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://java.sun.com/jstl/core"
	xmlns:s="http://jboss.com/products/seam/taglib"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:el4j="http://www.elca.ch/el4j/taglib"
	template="layout/template.xhtml">
	
	<ui:remove><!-- a demo page showing various features --></ui:remove>

      

	<ui:remove><!-- demo 1 part 1: JavaScripts for Seam Remoting (AJAX) --></ui:remove>
	
  
	
	<ui:define name="JavaScripts">
		<s:remote include="remotingTest" />
		<script type="text/javascript">
//<![CDATA[
function sayHello() {
  var name = prompt("What is your name?");
  Seam.Component.getInstance("remotingTest").sayHello(name, sayHelloCallback);
}
function sayHelloCallback(result) {
  alert(result);
}
// ]]>
        </script>
	</ui:define>

	<ui:define name="body">
		<h:messages globalOnly="true" styleClass="message" />
		
		<ui:include src="/WEB-INF/facelet/modalPanel.xhtml">
        
            
             <!-- Id for the popup -->
            <c:set var="panelId" value="demoPopup" />
            
            <c:set var="panelTitle" value="Demos" />
        
        
            
            <c:set var="userText" value="This page serves as a demo/test page.
            In the AJAX demo, you can click on the button, enter a name, which
            will then be sent to server and processed, and get the response from
            the server in as message box.
            Second, the Editable Combobox either lets you select an item from a list or
            you can enter a free text. Click on 'Check value' to see the value you
            entered.
            The entity test is just to test entities having fields of some
            complex type. This is interesting only for developers.
            The conversation playground is for developers, too." />
            
            
            <c:set var="technicalText" value="The AJAX demo show the use of Seam
             Remoting. The class behind is ch.elca.el4j.seam.demo.RemotingTest,
             which contains a @WebMethod annotated method.
             
             The Editable Combobox shows a way to create a comboxbox with enhanced
             features. Actually, this is not a combobox (selectOneMenu), but an own
             tag containing a textbox and a dataTable and some JavaScript to glue
             them together. Refer to the file 
             /WEB-INF/facelet/editableCombobox.xhtml for a more extended documentation.
             Furthermore, the 'Check value' button demonstrates how to send an AJAX
             request and to refresh a part of the page without having to do a 
             HTTT request.
             
             Using the entity test you can easily play around with complex
             types. Extend the class ch.elca.el4j.seam.demo.entities.EntityTest
             so that it has a field having the type you want to test.
             Afterwards you can have a look at this page to check if it is
             displayed correctly.
             Begin and end conversations manually and look how Seam reacts...
             Of course, have a look at the source code for all the details." />
             
        </ui:include>
		
            
         <div align="right">
                <table border="0">
                    <tr>
                        <td>
                              <h:graphicImage value="img/help.png" style="cursor:pointer" 
                              onclick="Richfaces.showModalPanel('demoPopup',{width:450, top:200})" />
                       </td>
                       <td>
                               <a style="vertical-align: center;font-size:11px" href="javascript:Richfaces.showModalPanel('demoPopup',{width:450, top:200})">
                               About this page...</a>
                       </td>        
                   </tr>
               </table>
         </div> 
		
		
		<h2>
			AJAX integration
		</h2>
		<button onclick="javascript:sayHello()">
			Say Hello
		</button>
		
		
		<ui:remove><!-- Editable combobox control. See editableCombobox.xhtml
		for more information. --></ui:remove>
        
        <h2>
            Editable Combobox Test
        </h2>
        <p>Select an item or enter a new value</p>
        
        <rich:panel>
           <h:form id="form1">
            
            <el4j:editableCombobox id="cbo"
                                   formId="form1"
                                   width="196px"
                                   value="#{comboTester.value}"
                                   listValue="#{comboTester.list}"
                                   listText="#{var.firstName}"  
                                   />   

            <a4j:commandButton value="Check value"
                reRender="testValue" />
            
            <a4j:outputPanel id="testValue">
                <h:outputText value="Current value: #{comboTester.value}" />
            </a4j:outputPanel>
            
            </h:form>
        </rich:panel>
        
	    

		<ui:remove><!-- demo 2: Embed master view of entity containing a date field --></ui:remove>
		<h2>
			Entity Test
		</h2>
		<el4j:set var="entityShortName" value="entityTest" />
		<c:set var="detailPage" value="/entityTest.xhtml" />
		<ui:decorate template="layout/masterView.xhtml" />

		<ui:remove><!-- demo 3: Playground for conversations --></ui:remove>
		<h2>
			Conversation Playground
		</h2>
		<rich:panel>
			<f:facet name="header">Tests</f:facet>
			<h3>
				Actions
			</h3>
			<h:form>
				<ul>
					<li>
						<h:commandLink value="refresh"
							action="#{conversationTester.refresh()}" />
					</li>
					<li>
						<h:commandLink value="begin (no active conversation allowed)"
							action="#{conversationTester.begin()}" />
					</li>
					<li>
						<h:commandLink value="begin(join)"
							action="#{conversationTester.beginJoin()}" />
					</li>
					<li>
						<h:commandLink value="end" action="#{conversationTester.end()}" />
					</li>
				</ul>
			</h:form>
            Number of pages in conversation: #{counter}
            <h3>
				Conversations
			</h3>
			<h:dataTable
				value="#{org.jboss.seam.debug.contexts.conversationEntries}"
				rendered="#{not empty org.jboss.seam.debug.contexts.conversationEntries}"
				var="entry">
				<h:column>
					<f:facet name="header">conversation id</f:facet>
			        #{entry.id}
			    </h:column>
				<h:column>
					<f:facet name="header">activity</f:facet>
					<h:outputText value="#{entry.startDatetime}">
						<f:convertDateTime type="time" />
					</h:outputText>
			        - 
			        <h:outputText value="#{entry.lastDatetime}">
						<f:convertDateTime type="time" />
					</h:outputText>
				</h:column>
				<h:column>
					<f:facet name="header">description</f:facet>
			        #{entry.description}
			    </h:column>
				<h:column>
					<f:facet name="header">view id</f:facet>
			        #{entry.viewId}
			     </h:column>
				<h:column>
					<h:outputLink>
			          Select conversation context
			          <f:param
						  name="#{org.jboss.seam.core.manager.conversationIdParameter}"
						  value="#{entry.id}" />
					</h:outputLink>
				</h:column>
			</h:dataTable>
		</rich:panel>

	</ui:define>
</ui:composition>
