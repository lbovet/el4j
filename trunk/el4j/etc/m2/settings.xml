<!-- Version: $Revision$ -->
<!-- URL: $URL$ -->
<!-- Date: $Date$ -->
<!-- Author: $Author$ -->

<!--
    | This is the configuration file for Maven. It can be specified at two levels:
    |
    |  1. User Level. This settings.xml file provides configuration for a single user,
    |                 and is normally provided in $HOME/.m2/settings.xml.
    |
    |                 NOTE: This location can be overridden with the system property:
    |
    |                 -Dorg.apache.maven.user-settings=/path/to/user/settings.xml
    |
    |  2. Global Level. This settings.xml file provides configuration for all maven
    |                 users on a machine (assuming they're all using the same maven
    |                 installation). It's normally provided in
    |                 ${maven.home}/conf/settings.xml.
    |
    |                 NOTE: This location can be overridden with the system property:
    |
    |                 -Dorg.apache.maven.global-settings=/path/to/global/settings.xml
    |
    | The sections in this sample file are intended to give you a running start at
    | getting the most out of your Maven installation. Where appropriate, the default
    | values (values used when the setting is not specified) are provided.
    |
    |-->
<settings>
    <!-- localRepository
        | The path to the local repository maven will use to store artifacts.
        |
        | Default: ~/.m2/repository
    -->
    <localRepository>~/.m2/repository</localRepository>

    <!-- interactiveMode
        | This will determine whether maven prompts you when it needs input. If set to false,
        | maven will use a sensible default value, perhaps based on some other setting, for
        | the parameter in question.
        |
        | Default: true
        <interactiveMode>true</interactiveMode>
    -->

    <!-- offline
        | Determines whether maven should attempt to connect to the network when executing a build.
        | This will have an effect on artifact downloads, artifact deployment, and others.
        |
        | Default: false
        <offline>false</offline>
    -->

    <!-- proxies
        | This is a list of proxies which can be used on this machine to connect to the network.
        | Unless otherwise specified (by system property or command-line switch), the first proxy
        | specification in this list marked as active will be used.
        |-->
    <proxies>
        <!--proxy>
            <id>optional</id>
            <active>true</active>
            <protocol>http</protocol>
            <host>proxy.elca.ch</host>
            <port>8080</port>
            <nonProxyHosts>*.elca.ch|leaffy|localhost</nonProxyHosts>
        </proxy-->
    </proxies>

    <!-- servers
        | This is a list of authentication profiles, keyed by the server-id used within the system.
        | Authentication profiles can be used whenever maven must make a connection to a remote server.
        |-->
    <servers>
        <!--server>
            <id>ftpEl4ElcaServices</id>
            <username>********</username>
            <password>********</password>
        </server>
        <server>
            <id>fileLeaffy</id>
            <username>********</username>
            <password>********</password>
        </server>
        <server>
            <id>ftpEl4ElcaServicesSnapshot</id>
            <username>********</username>
            <password>********</password>
        </server>
        <server>
            <id>fileLeaffySnapshot</id>
            <username>********</username>
            <password>********</password>
        </server-->
        
        
        <!-- server
            | Specifies the authentication information to use when connecting to a particular server, identified by
            | a unique name within the system (referred to by the 'id' attribute below).
            |
            | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are
            |       used together.
            |
            <server>
            <id>deploymentRepo</id>
            <username>repouser</username>
            <password>repopwd</password>
            </server>
        -->

        <!-- Another sample, using keys to authenticate.
            <server>
            <id>siteServer</id>
            <privateKey>/path/to/private/key</privateKey>
            <passphrase>optional; leave empty if not used.</passphrase>
            </server>
        -->
    </servers>

    <!-- mirrors
        | This is a list of mirrors to be used in downloading artifacts from remote repositories.
        |
        | It works like this: a POM may declare a repository to use in resolving certain artifacts.
        | However, this repository may have problems with heavy traffic at times, so people have mirrored
        | it to several places.
        |
        | That repository definition will have a unique id, so we can create a mirror reference for that
        | repository, to be used as an alternate download site. The mirror site will be the preferred
        | server for that repository.
        |-->
    <mirrors>
        <!-- mirror
            | Specifies a repository mirror site to use instead of a given repository. The repository that
            | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used
            | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.
            |
            <mirror>
            <id>mirrorId</id>
            <mirrorOf>repositoryId</mirrorOf>
            <name>Human Readable Name for this Mirror.</name>
            <url>http://my.repository.com/repo/path</url>
            </mirror>
        -->
        
    
        
   <!-- ######  Release mirrors  (severd via proximity) ###### -->

   <!-- Uncomment this block if you are inside ELCA! -->
   <!--mirror>
            <id>proximityCentral</id>
            <mirrorOf>central</mirrorOf>
            <name>Proxmity mirrored central.</name>
            <url>http://leaffy.elca.ch:18080/repository/apache.release</url>
        </mirror>
        
       <mirror>
            <id>proximityCodehaus</id>
            <mirrorOf>codehaus</mirrorOf>
            <name>Proxmity mirrored codehaus.</name>
            <url>http://leaffy.elca.ch:18080/repository/codehaus.release</url>
        </mirror>
        
        <mirror>
            <id>proximityJBoss</id>
            <mirrorOf>jboss</mirrorOf>
            <name>Proxmity mirrored jboss.</name>
            <url>http://leaffy.elca.ch:18080/repository/jboss.release</url>
        </mirror>

        <mirror>
            <id>proximityBaka</id>
            <mirrorOf>baka</mirrorOf>
            <name>Proxmity mirrored baka.</name>
            <url>http://leaffy.elca.ch:18080/repository/baka.release</url>
        </mirror>
        
        <mirror>
            <id>proximityJavaNetMaven1</id>
            <mirrorOf>java.net</mirrorOf>
            <name>Proxmity mirrored java-net-maven-1.</name>
            <url>http://leaffy.elca.ch:18080/repository/java-net-maven-1.release</url>
        </mirror>
        
        <mirror>
            <id>proximityJavaNetMaven2</id>
            <mirrorOf>maven2-repository.dev.java.net</mirrorOf>
            <name>Proxmity mirrored java-net-maven-2.</name>
            <url>http://leaffy.elca.ch:18080/repository/java-net-maven-2.release</url>
        </mirror>
        
        <mirror>
            <id>proximityLeaffy</id>
            <mirrorOf>el4jReleaseRepositoryInternal</mirrorOf>
            <name>Proxmity mirrored el4jReleaseRepositoryInternal.</name>
            <url>http://leaffy.elca.ch:18080/repository/leaffy.release</url>
        </mirror-->
        
       
   <!-- ######  Snapshot mirrors  ###### -->
   <!-- Uncomment if you are inside ELCA! -->
   <!--mirror>
            <id>proximityCentralSnapshot</id>
            <mirrorOf>apache.snapshots</mirrorOf>
            <name>Proxmity mirrored apache.snapshots.</name>
            <url>http://leaffy.elca.ch:18080/repository/apache.snapshot</url>
        </mirror>

        <mirror>
            <id>proximityCodehausSnapshot</id>
            <mirrorOf>codehaus.snapshot</mirrorOf>
            <name>Proxmity mirrored codehaus.snapshot.</name>
            <url>http://leaffy.elca.ch:18080/repository/codehaus.snapshot</url>
        </mirror>

        <mirror>
            <id>proximityLeaffySnapshot</id>
            <mirrorOf>el4jSnapshotRepositoryInternal</mirrorOf>
            <name>Proxmity mirrored el4jSnapshotRepositoryInternal.</name>
            <url>http://leaffy.elca.ch:18080/repository/leaffy.snapshot</url>
        </mirror-->
        

   <!-- Uncomment if you are inside ELCA but not at Lausanne! -->
   <!--mirror>
            <id>proximityEl4ElcaServices</id>
            <mirrorOf>el4jReleaseRepositoryExternal</mirrorOf>
            <name>Proxmity mirrored el4jReleaseRepositoryExternal.</name>
            <url>http://leaffy.elca.ch:18080/repository/el4-elca-services.release</url>
        </mirror>
        
       <mirror>
            <id>proximityEl4ElcaServicesSnapshot</id>
            <mirrorOf>el4jSnapshotRepositoryExternal</mirrorOf>
            <name>Proxmity mirrored el4jSnapshotRepositoryExternal.</name>
            <url>http://leaffy.elca.ch:18080/repository/el4-elca-services.snapshot</url>
        </mirror>
        
        <mirror>
            <id>proximityPluginEl4ElcaServices</id>
            <mirrorOf>el4jReleasePluginRepositoryExternal</mirrorOf>
            <name>Proxmity mirrored el4jReleasePluginRepositoryExternal.</name>
            <url>http://leaffy.elca.ch:18080/repository/el4-elca-services.release</url>
        </mirror>
        
        <mirror>
            <id>proximityPluginEl4ElcaServicesSnapshot</id>
            <mirrorOf>el4jSnapshotPluginRepositoryExternal</mirrorOf>
            <name>Proxmity mirrored el4jSnapshotPluginRepositoryExternal.</name>
            <url>http://leaffy.elca.ch:18080/repository/el4-elca-services.snapshot</url>
        </mirror-->
    </mirrors>


    <!-- profiles
        | This is a list of profiles which can be activated in a variety of ways, and which can modify
        | the build process. Profiles provided in the settings.xml are intended to provide local machine-
        | specific paths and repository locations which allow the build to work in the local environment.
        |
        | For example, if you have an integration testing plugin - like cactus - that needs to know where
        | your Tomcat instance is installed, you can provide a variable here such that the variable is
        | dereferenced during the build process to configure the cactus plugin.
        |
        | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles
        | section of this document (settings.xml) - will be discussed later. Another way essentially
        | relies on the detection of a system property, either matching a particular value for the property,
        | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a
        | value of '1.4' might activate a profile when the build is executed on a JDK version of '1.4.2_07'.
        | Finally, the list of active profiles can be specified directly from the command line.
        |
        | NOTE: For profiles defined in the settings.xml, you are restricted to specifying only artifact
        |       repositories, plugin repositories, and free-form properties to be used as configuration
        |       variables for plugins in the POM.
        |
        |-->
    <profiles>
        <profile>
            <id>el4j.general</id>
            <properties>
                <!-- Project properties -->
                <el4j.project.home>~/myproject</el4j.project.home>
                <el4j.project.tools>${el4j.project.home}/tools</el4j.project.tools>

                <!-- EL4J developer specific properties -->
                <el4j.root>${el4j.project.home}</el4j.root>
                <el4j.external>${el4j.root}/external</el4j.external>
                <el4j.internal>${el4j.root}/internal</el4j.internal>                
                
                <!-- Tomcat5x -->
                <tomcat5x.basedir>${el4j.project.tools}/tomcat</tomcat5x.basedir>
                <tomcat5x.version>5.5.25</tomcat5x.version>
                <tomcat5x.home>${tomcat5x.basedir}/apache-tomcat-${tomcat5x.version}/apache-tomcat-${tomcat5x.version}</tomcat5x.home>
                <tomcat5x.zipDownloadUrl>http://el4.elca-services.ch/el4j/tools/tomcat/apache-tomcat-${tomcat5x.version}.zip</tomcat5x.zipDownloadUrl>
                <tomcat5x.container.log.file>${project.build.directory}/logs/tomcat5x/output.log</tomcat5x.container.log.file>
                <tomcat5x.cargo.log.file>${project.build.directory}/logs/tomcat5x/cargo.log</tomcat5x.cargo.log.file>
                <tomcat5x.eclipse.runtime.facet.name>Apache Tomcat v5.5</tomcat5x.eclipse.runtime.facet.name>

                <!-- Tomcat6x -->
                <tomcat6x.basedir>${el4j.project.tools}/tomcat</tomcat6x.basedir>
                <tomcat6x.version>6.0.14</tomcat6x.version>
                <tomcat6x.home>${tomcat6x.basedir}/apache-tomcat-${tomcat6x.version}/apache-tomcat-${tomcat6x.version}</tomcat6x.home>
                <tomcat6x.zipDownloadUrl>http://el4.elca-services.ch/el4j/tools/tomcat/apache-tomcat-${tomcat6x.version}.zip</tomcat6x.zipDownloadUrl>
                <tomcat6x.container.log.file>${project.build.directory}/logs/tomcat6x/output.log</tomcat6x.container.log.file>
                <tomcat6x.cargo.log.file>${project.build.directory}/logs/tomcat6x/cargo.log</tomcat6x.cargo.log.file>
                <tomcat6x.eclipse.runtime.facet.name>Apache Tomcat v6.0</tomcat6x.eclipse.runtime.facet.name>

                <!-- Weblogic9x -->
                <weblogic9x.home>${el4j.project.tools}/bea/weblogic90</weblogic9x.home>
                <weblogic9x.server.name>myserver</weblogic9x.server.name>
                <weblogic9x.domains.home>${el4j.project.tools}/bea/domains</weblogic9x.domains.home>
                <weblogic9x.domain.name>el4j</weblogic9x.domain.name>
                <weblogic9x.manager.username>weblogic</weblogic9x.manager.username>
                <weblogic9x.manager.password>weblogic</weblogic9x.manager.password>
                <weblogic9x.container.log.file>${project.build.directory}/logs/weblogic9x/output.log</weblogic9x.container.log.file>
                <weblogic9x.cargo.log.file>${project.build.directory}/logs/weblogic9x/cargo.lo</weblogic9x.cargo.log.file>
                
                
                 <!-- Weblogic10 -->
                <weblogic10.home>${el4j.project.tools}/bea/wlserver_10.0</weblogic10.home>
                <weblogic10.server.name>testServer</weblogic10.server.name>
                <weblogic10.domains.home>${el4j.project.tools}/bea/wlserver_10.0/samples/domains/${weblogic10.domain.name}</weblogic10.domains.home>
                <weblogic10.domain.name>el4j</weblogic10.domain.name>
                <weblogic10.manager.username>weblogic</weblogic10.manager.username>
                <weblogic10.manager.password>weblogic</weblogic10.manager.password>
                <weblogic10.container.log.file>${project.build.directory}/output.log</weblogic10.container.log.file>
                <weblogic10.cargo.log.file>${project.build.directory}/cargo.log</weblogic10.cargo.log.file>
                <weblogic10.jrockit.home>${weblogic10.home}/../JROCKI~1</weblogic10.jrockit.home>
                
                <!-- Birt -->
                <birt.home>${el4j.project.tools}/birt-runtime-2_1_0</birt.home>
                
                <!-- Eclipse -->
                <!--eclipse.reactorProjectGroupIdPrefixes>
                    ch.elca.el4j.modules,
                    ch.elca.el4j.tests,
                    ch.elca.el4j.applications
                </eclipse.reactorProjectGroupIdPrefixes-->
            </properties>
        </profile>
        
        <!-- profile
            | Specifies a set of introductions to the build process, to be activated using one or more of the
            | mechanisms described above. For inheritance purposes, and to activate profiles via <activatedProfiles/>
            | or the command line, profiles have to have an ID that is unique.
            |
            | An encouraged best practice for profile identification is to use a consistent naming convention
            | for profiles, such as 'env-dev', 'env-test', 'env-production', 'user-jdcasey', 'user-brett', etc.
            | This will make it more intuitive to understand what the set of introduced profiles is attempting
            | to accomplish, particularly when you only have a list of profile id's for debug.
            |
            | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo.
            <profile>
            <id>jdk-1.4</id>
            
            <activation>
            <jdk>1.4</jdk>
            </activation>
            
            <repositories>
            <repository>
            <id>jdk14</id>
            <name>Repository for JDK 1.4 builds</name>
            <url>http://www.myhost.com/maven/jdk14</url>
            <layout>default</layout>
            <snapshotPolicy>always</snapshotPolicy>
            </repository>
            </repositories>
            </profile>
        -->

        <!--
            | Here is another profile, activated by the system property 'target-env' with a value of 'dev',
            | which provides a specific path to the Tomcat instance. To use this, your plugin configuration
            | might hypothetically look like:
            |
            | ...
            | <plugin>
            |   <groupId>org.myco.myplugins</groupId>
            |   <artifactId>myplugin</artifactId>
            |
            |   <configuration>
            |     <tomcatLocation>${tomcatPath}</tomcatLocation>
            |   </configuration>
            | </plugin>
            | ...
            |
            | NOTE: If you just wanted to inject this configuration whenever someone set 'target-env' to
            |       anything, you could just leave off the <value/> inside the activation-property.
            |
            <profile>
            <id>env-dev</id>
            
            <activation>
            <property>
            <name>target-env</name>
            <value>dev</value>
            </property>
            </activation>
            
            <properties>
            <tomcatPath>/path/to/tomcat/instance</tomcatPath>
            </properties>
            </profile>
        -->
    </profiles>

    <!-- activeProfiles
        | List of profiles that are active for all builds.
        -->
    <activeProfiles>
        <activeProfile>el4j.general</activeProfile>
    </activeProfiles>
    
    <pluginGroups>
        <pluginGroup>org.codehaus.cargo</pluginGroup>
        <pluginGroup>ch.elca.el4j.maven.plugins</pluginGroup>
    </pluginGroups>
</settings>
