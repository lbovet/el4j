   ------
   Introduction
   ------
   TBC
   ------
   23 April 2007
   ------


Maven Webstart Plugin

  The Webstart plugin performs many of the tasks required for the creation
  of an application bundle that can be deployed via Web Start. For example, it handles 
  the generation of a JNLP file that contains references to jar resources declared as project
  dependencies in a Maven project pom.xml file. It also performs jar signing and Pack200 compression 
  if desired.

* Goals Overview

  General Information about the goals.

  * {{{jnlp-mojo.html}webstart:jnlp}} Packages a JNLP application.
  
  * {{{jnlp-inline-mojo.html}webstart:jnlp-inline}} Packages a JNLP application without launching a 
  parallel build lifecycle.
  
  * {{{jnlp-single-mojo.html}webstart:jnlp-single}} Packages a JNLP application in non-aggregator mode without launching a 
  parallel build lifecycle

* Usage

  Instructions on how to use the Maven Webstart Plugin can be found {{{usage.html}here}}.

* Examples

  To provide you with a better understanding of some usages of the Webstart Plugin,
  you can take a look into the following examples:

  * {{{examples/single_webstart_app.html}Build a standalone Webstart bundle artifact}}.

  * {{{examples/war_bundle_1.html}WAR Bundle #1}}
  
  * {{{examples/war_bundle_2.html}WAR Bundle #2}}
  
* Plugin Stability

  This is a very early but working release. It requires maven 2 (version 2.0.4 or later) to work correctly.

  <<Change from 1.0-alpha-1>> the most required feature, {{{http://jira.codehaus.org/browse/MWEBSTART-13} MWEBSTART-13}}, 
  has been partially implemented. It should be possible to use the plugin without using a single module for the webstart 
  bundling. The {{{usage.html}documentation}} has not been fully updated to reflect this change.
  
  <<Change from 1.0-alpha-1>> The default location for the template and resources have changed. 
  See {{{http://jira.codehaus.org/browse/MWEBSTART-16} MWEBSTART-16}} for discussion.

  <<Note>> in order to build from source, you will need several dependencies. The webstart plugin is in fact a 
  multi-module project and some of its dependencies are located under the {{{..}parent directory}} of the plugin 
  itself. Be sure to check out the complete project.

* Features:

   * JNLP file generation where information is inserted into a user
     defined {{{http://velocity.apache.org/}Velocity template}}

   * transitive dependencies
   
      * possibilities to include/exclude dependencies

   * key generation (thanks to the {{{http://mojo.codehaus.org/keytool-maven-plugin/} keytool-maven-plugin}})

   * jar signing and signing verification

   * pack200 support for compressed versions of the jar files resulting in
     faster network downloads of your webstart application.

   * pluggable API for jar signer


* Upcoming changes

   * {{{http://jira.codehaus.org/browse/MWEBSTART-1} dealing with already signed jars}}

     You can already try the webstart:unsign mojo. It's not yet integrated in the overall jnlp ones, but will in the end.

* Reported missing features

   * more support for standalone webstart apps (e.g. download.html/index.html)

   * handling of native libraries

   * ability to launch the application

   * building multiple jnlp app in one zip using one m2 project?? (not sure as this is not a very maven way of doing things)

      * would require merging version.xml

   * what about deploying multiple versions of the same app? Is that ever wanted, e.g. for upgrades?

   * ?? add a new goal to help deal with web applications

      * one step war+webstart generation (one project, webstart plugin used in pre-package phase)

      * more war integration (jnlp, web.xml)

 The plugin can be used to prepare standalone webstart applications or webstart app bundled in war files.

* Links

  * {{{http://docs.codehaus.org/display/MOJO/Webstart+Plugin} confluence wiki page for the plugin}}

  * {{{http://sun-jnlp-servlet.dev.java.net/} http://sun-jnlp-servlet.dev.java.net/}}

  * {{{http://deployment.dev.java.net/} http://deployment.dev.java.net/}}
