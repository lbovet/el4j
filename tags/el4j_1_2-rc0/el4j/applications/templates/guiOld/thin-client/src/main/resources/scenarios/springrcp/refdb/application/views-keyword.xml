<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <!-- $Revision$ -->
    <!-- $URL$ -->
    <!-- $Date$ -->
    <!-- $Author$ -->
    
    <!--
        Keyword table view descriptor. Describs the keyword table view. This 
        class is needed as factory for the given viewPrototypeBeanName. 
    -->
    <bean id="keywordTableView"
        class="ch.elca.el4j.services.gui.richclient.views.descriptors.impl.LookupViewDescriptor">
        <property name="viewPrototypeBeanName">
            <idref bean="keywordTableViewTarget" />
        </property>
        <property name="preferredGroup" value="tableGroup"/>
    </bean>

    <!-- 
        Keyword table view target. Must be prototype! Implemented by user.
    -->
    <bean id="keywordTableViewTarget"
        class="ch.elca.el4j.apps.refdb.gui.views.KeywordView"
        scope="prototype">
        <property name="beanTableModel">
            <!--
                Is the table model for keyword domain objects.
            -->
            <ref bean="keywordBeanTableModel" />
        </property>
        <property name="beanExecutors">
            <!--
                These are the executors for this view.
            -->
            <list>
                <!--
                    Executor to change keyword data.
                -->
                <ref bean="keywordPropertiesExecutor" />
                <!--
                    Executor to delete keywords.
                -->
                <ref bean="keywordDeleteExecutor" />
                <!--
                    Executor to select all displayed keywords.
                -->
                <ref bean="keywordSelectAllExecutor" />
                <!--
                    Executor to create a keyword.
                -->
                <ref bean="keywordCreateNewExecutor" />
            </list>
        </property>
    </bean>
    
    <!-- 
        Table model for keyword domain objects.
    -->
    <bean id="keywordBeanTableModel"
        class="ch.elca.el4j.services.gui.richclient.models.BeanTableModel"
        scope="prototype">
        <property name="beanClass"
            value="ch.elca.el4j.apps.keyword.dom.Keyword"/>
        <property name="columnPropertyNames">
            <list>
                <!--
                    List properties that must be displayed in shown table. The 
                    order here is the same in shown table.
                -->
                <value>name</value>
                <value>description</value>
            </list>
        </property>
    </bean>
    
    <!--
        Keyword search view descriptor. Describs the keyword search view. This 
        class is needed as factory for the given viewPrototypeBeanName.
    -->
    <bean id="keywordSearchView"
        class="ch.elca.el4j.services.gui.richclient.views.descriptors.impl.LookupViewDescriptor">
        <property name="viewPrototypeBeanName">
            <idref bean="keywordSearchViewTarget" />
        </property>
        <property name="preferredGroup" value="searchGroup"/>
    </bean>

    <!--
        Keyword search view target. Must be prototype!
    -->
    <bean id="keywordSearchViewTarget"
        class="ch.elca.el4j.services.gui.richclient.views.SearchView"
        scope="prototype">
        <property name="searchItems">
            <list>
                <bean class="ch.elca.el4j.services.gui.search.LikeSearchItem"
                    scope="prototype">
                    <property name="targetProperty" value="name"/>
                    <property name="targetBeanClass" 
                        value="ch.elca.el4j.apps.keyword.dom.Keyword"/>
                </bean>
                <bean class="ch.elca.el4j.services.gui.search.LikeSearchItem"
                    scope="prototype">
                    <property name="targetProperty" value="description"/>
                    <property name="targetBeanClass" 
                        value="ch.elca.el4j.apps.keyword.dom.Keyword"/>
                </bean>
            </list>
        </property>
    </bean>
</beans>
