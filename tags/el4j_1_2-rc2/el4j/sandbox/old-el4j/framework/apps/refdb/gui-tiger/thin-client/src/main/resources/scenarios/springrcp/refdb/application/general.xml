<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <!-- $Revision$ -->
    <!-- $URL$ -->
    <!-- $Date$ -->
    <!-- $Author$ -->

    <!-- Application general parts. -->
    <import resource="classpath:scenarios/springrcp/application/applicationGeneral.xml"/>  
    <!-- Are the message, image and icon sources. -->
    <import resource="classpath:scenarios/springrcp/refdb/application/internal/localizationSources.framework.xml"/>
    <!-- Are some services for the application. -->
    <import resource="classpath:scenarios/springrcp/application/applicationServices.xml"/>
    <!-- Are helpers and factories to create and manage components. -->
    <import resource="classpath:scenarios/springrcp/application/applicationComponentParts.xml"/>
    <!-- Are binders for gui components with data models. -->
<!--    <import resource="classpath:scenarios/springrcp/application/componentBinders.xml"/>-->
    
    <!-- 
        Binds bean properties to gui components.
    -->
    <bean id="binderSelectionStrategy" 
        class="org.springframework.richclient.form.binding.swing.SwingBinderSelectionStrategy">
        <property name="bindersForPropertyTypes">
            <map>
                <entry>
                    <key><value type="java.lang.Class">java.lang.Boolean</value></key>
                    <bean class="ch.elca.el4j.services.richclient.binders.ThreeStateBooleanBinder"/>
                </entry>
                <entry>
                    <key><value type="java.lang.Class">java.sql.Date</value></key>
                    <bean class="ch.elca.el4j.services.gui.richclient.forms.binding.DatePickerBinder"/>
                </entry>
            </map>
        </property>
    </bean>
    
    
    
    
    <!-- Property overrider for general purpose. -->
    <bean id="refdbGuiSpringrcpPropertyOverrideConfigurer"
        class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
        <property name="location"
            value="classpath:scenarios/springrcp/refdb/application/property-override-configurer.properties"/>
    </bean>
    
    
    <!-- List property merger. Appends given values to existing values. -->
    <bean id="refdbGuiSpringrcpListPropertyMergeConfigurerAfter"
        class="ch.elca.el4j.core.config.ListPropertyMergeConfigurer">
        <property name="location"
            value="classpath:scenarios/springrcp/refdb/application/property-merge-configurer-after.properties"/>
        <property name="insertNewItemsAfter" value="true"/>
    </bean>


    <!-- List property merger. Prepends given values to existing values. -->
    <bean id="refdbGuiSpringrcpListPropertyMergeConfigurerBefore"
        class="ch.elca.el4j.core.config.ListPropertyMergeConfigurer">
        <property name="location"
            value="classpath:scenarios/springrcp/refdb/application/property-merge-configurer-before.properties"/>
        <property name="insertNewItemsBefore" value="true"/>
    </bean>


    <!-- 
        Validation rules for input data. Used in all forms. The bean with id 
        "rulesSource" is looked up by the application services class.
    -->
    <bean id="rulesSource"
        class="ch.elca.el4j.apps.refdb.rules.RefdbValidationRulesSource" />
        
    
    <bean id="servicesExtender"
    	class="ch.elca.el4j.services.gui.richclient.support.ExtendableApplicationServices$Extender">
    	
    	<property name="services">
    		<map>
    			<entry>
    				<key><value>ch.elca.el4j.services.persistence.generic.RepositoryAgency</value></key>
    				<ref bean="repoAgency"/>
    			</entry>
    		</map>
    	</property>
   	</bean>
   	
   	<bean id="repoAgency"
   		class="ch.elca.el4j.services.persistence.generic.impl.DefaultRepositoryAgency">
   		<constructor-arg><ref bean="identityFixer"/></constructor-arg>
   		<constructor-arg><ref bean="repoRegistry"/></constructor-arg>
   	</bean>
        
    <!-- and last, but certainly not least, the actual GUI: -->
    <bean id="gui"
    	class="ch.elca.el4j.apps.lightrefdb.gui.RefDbGui" lazy-init="true"/>
</beans>
