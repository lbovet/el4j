---+ Getting started
Remark: Every directory mentioned in this document is relative to the 
 el4j-<version> directory.

---++ Description of directories
   * Directory "external-tools" contains by default the tools Ant and EL4Ant.
     We sometimes also put tools such as Tomcat, JBoss or the Derby database in this 
     directory. We will provide some hints on how we recommend to set these tools up.
   * Directory "lib" contains (almost) all needed jar and zip files for EL4J.
     Library files such as the JDBC driver for Oracle and DB2 (same for Derby) must be
     download from the vendor's homepage if you need them.
       * Download the DB2/Derby JDBC driver (db2jcc.jar and db2jcc_license_c.jar)
         from "http://www.ibm.com/developerworks/db2/downloads/jcc/".
       * Download the Oracle driver (ojdbc14*.jar)
         from "http://www.oracle.com/technology/software/tech/java/sqlj_jdbc/".
         Note: You can also use the 10g driver for version 9 database.
   * Directory "lib/src" contains sources for library files of directory "lib".
   * Directory "framework" contains the source of the EL4J framework. If your 
     download does not contain it, you can get it from "cvs.sourceforge.net".
   * Directory "etc" contains various little files about EL4J.
   
---+ How to get started (this is just a proposition to show some features)
   * Set Ant (directory "external-tools/ant/bin") to your path.
     IMPORTANT: We require at least Ant 1.6.5 (try ant -version).
   * cd framework
   * ant -f bootstrap.xml (same as "ant -f bootstrap.xml configure")
       * A standard Ant "build.xml" will be created. It generates also Eclipse files 
         (".project", ".classpath and so on). Needed library (jar/zip) files 
         will be downloaded/ copied to "framework/lib". Sources of it to "framework/lib/src". 
         EL4Ant complains if a library file (as described in the dependencies) can not 
         be found. In this case, the library file has to be download manually from the 
         vendor's homepage and be copied in the directory "framework/lib".

   * ant -p  
       * Show all available targets (standard ant). Most of the targets are convenience 
         targets.
   * ant compile
       * Directory "framework/dist/classes" will be created with a folder for
         each module of the EL4J framework project. These folders contain the 
         compiled classes.
   * ant jars
       * Generated jars will be located in the directory "framework/dist/lib".
   * ant start.module.eu.module-daemon_manager-tests
       * JUnit tests of module-daemon_manager will be started. JUnit Reports (xml files) can be
         found in directory "framework/dist/junit". This command executes the
         tests with generated module jar files (command "ant jars" is prerequisite).
   * ant startdev.module.eu.module-daemon_manager-tests
       * Executes the same as before but with code from classes directory (not from jars) 
         from directory "framework/dist/classes".
   * ant junit.report
       * Creates a junit website report for executed junit tests in directory
         "framework/dist/website/junit".
   * ant javadoc
       * Generates javadoc in directory "framework/dist/website/javadoc".
   * ant checkstyle
       * Checks the whole framework code with Checkstyle rules. Reports can be 
         found in directory "framework/dist/website/checkstyle".
   * ant website
       * Creates a website for the framework project in the directory
         "framework/dist/website". It contains links to the generated project
         reports of junit, javadoc, checkstyle, ... Follow the project reports
         link.

   * You can open eclipse and set directory "framework/workspace" as 
     workspace. Set ANT_HOME in Window/Preferences to directory 
     "external-tools/ant". Import all eclipse projects into the workspace. The 
     incremental compilation of eclipse works such that you don't need 
     to manually "ant compile". To enable Checkstyle in Eclipse 
     please consult the documentation.
         
   * If you need J2EE container support, set the configurations for your containers 
     under framework/env. These settings are then automatically available for EL4Ant
     and for Spring. We have tested the framework with Tomcat (5.0), Jboss
     (4.0), Weblogic (8.1).
   * ant deploy.war.module.eu.module-remoting_and_interface_enrichment-tests.web
       * Re/Deploys the web part of the remoting test in the web container (tomcat
         by default, directory "external-tools/tomcat") and starts the web container 
         if it is not already running.
   * ant startdev.module.eu.module-remoting_and_interface_enrichment-tests.gui
       * Executes the JUnit tests for module remoting based on compiled classes
         from directory "framework/dist/classes".
   * ant junit.start.all
       * Run all junit tests (run all modules that are in the "framework-tests" subset)
     
   * ant binrelease
       * Creates binary releases of marked modules in directory 
         "framework/dist/binaries".
   
   * ant -f bootstrap.xml distclean (or "ant distclean" if build.xml exists)
       * Cleans directory "framework/dist" and removes file "build.xml".
         Note: Generated Eclispe files remain but be sure Eclipse is not opened
         in workspace of the framework project (directory 
         "framework/workspace").
