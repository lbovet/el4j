<?xml version="1.0"?>
<!-- Honeydew plugin definition -->
<project
  name="manifest-config-section-hook"
  xmlns:antcontrib="antlib:net.sf.antcontrib"
  xmlns:el4ant="antlib:ch.elca.el4ant">
<description>
Support for manifest 'config' section.
</description>

  <target
    name="configure"
    description="[C] Configure the manifest config section generator">

    <el4ant:buildgen action="include" target="manifestconfigsection.include.startpoint"/>

    <!-- Add hook to add 'config' section in jar manifest file -->
    <el4ant:hook
      action="append.last"
      name="pre.jar.[module].[eu]"
      target="manifestconfigsection.module.eu"/>

  </target>

  <!-- Fake init target to load plugin file -->
  <target name="init"/>

  <!-- Targets following the next fake target are copied into the generated build.xml file -->
  <target name="manifestconfigsection.include.startpoint"/>

  <!-- Targets from manifestconfigsection.xml  -->

  <target
    name="manifestconfigsection.module.eu">
    <!-- This pre.jar hook adds the 'config' section to the module execution
         unit Manifest file -->
    <antcontrib:if>
      <isset property="module.classes.exists"/>
      <antcontrib:then>
        <tstamp/>
        <mkdir dir="${module.classes}/META-INF"/>
        <mkdir dir="${module.classes}/config"/>

        <!-- if not set for module.eu -->
        <property
          name="module.eu.dependencies.${module}.${eu}"
          value=""/>
        <el4ant:extendedproperty
          name="module.eu.dependencies"
          value="${module.eu.dependencies.${module}.${eu}}"/>

        <!-- User defined list of configuration files has priority. Otherwise,
             all configuration files are included. -->
        <antcontrib:if>
          <not>
            <isset property="manifestconfigsection.files.${module}.${eu}"/>
          </not>
          <antcontrib:then>
            <el4ant:extendedproperty
               name="module.dir"
               value="${module.path.${module}}"/>
            
            <antcontrib:if>
              <isset property="resources.directories"/>
              <antcontrib:then>
                <pathconvert property="basedir.dir" dirsep="/">
                  <path path="${basedir}"/>
                </pathconvert>

                <property name="path.prefix" value="${basedir.dir}/${module.dir}"/>

                <!-- replace all commas in resource folder list with pipes -->
                <antcontrib:propertyregex
                  property="resources.directories.choice"
                  input="${resources.directories}"
                  global="true"
                  regexp=","
                  replace="|"
                  defaultvalue="${resources.directories}"/>

                <fileset dir="./" id="files" excludes="${module}/java/**"/>

                <!-- select potential config files only (requires Ant >=1.6.3) -->
                <pathconvert property="manifestconfigsection.files.${module}.${eu}" pathsep="," refid="files">
                  <regexpmapper from="^${path.prefix}/(${resources.directories.choice})/(.*)" to="\2" handledirsep="true"/>
                </pathconvert>
              </antcontrib:then>
              <antcontrib:else>
                <echo level="warning"
                  message="Either set the 'manifestconfigsection.files.${module}.${eu}' property in the module config or enable the resources plugin."/>
              </antcontrib:else>
            </antcontrib:if>
          </antcontrib:then>
        </antcontrib:if>
        
        <!-- if not set for module.eu -->
        <property
          name="manifestconfigsection.files.${module}.${eu}"
          value=""/>
        <el4ant:extendedproperty
          name="module.eu.manifestconfigsection.files"
          value="${manifestconfigsection.files.${module}.${eu}}"/>

        <manifest
          file="${module.classes}/META-INF/Manifest-${eu}.mf"
          mode="update">
          <section name="config">
            <attribute name="Module" value="${module}.${eu}"/>
            <attribute name="Files" value="${module.eu.manifestconfigsection.files}"/>
            <attribute name="Dependencies" value="${module.eu.dependencies}"/>
          </section>
        </manifest>
      </antcontrib:then>
    </antcontrib:if>
  </target>

  <!-- End  manifestconfigsection.xml  -->
</project>
